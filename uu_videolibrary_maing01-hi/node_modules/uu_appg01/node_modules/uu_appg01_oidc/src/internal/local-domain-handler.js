"use strict";

const {Config} = require("uu_appg01_core-utils");

const LOCAL_DOMAIN_LIST = "uu_app_oidc_local_domain_list";
const DEFAULT_LOCAL_DOMAIN_LIST = "localhost";
const LOCAL_DOMAIN_SCOPE = "uu_app_oidc_local_domain_call_token_scope";
const DEFAULT_LOCAL_DOMAIN_SCOPE = "https:// http://";

/**
 * Component for checking whether uri is part of "local domain" and returning
 * default call token scope for such uri. This is needed in order to provide
 * locally hosted apps with broad scope token so that such app is able to exchange
 * this token for any other token without requiring registered oidc client.
 */
class LocalDomainHandler {

  static isLocalDomain(uri) {
    if (!this._localDomainList) {
      this._loadConfiguration();
    }
    if (!uri) {
      return false;
    }
    uri = uri.toString();
    return !!this._localDomainList.find(domain => uri.match(domain));
  }

  static getLocalDomainScope() {
    if (!this._localDomainScope) {
      this._loadConfiguration();
    }
    return this._localDomainScope
  }

  static _loadConfiguration() {
    this._localDomainList = (Config.getString(LOCAL_DOMAIN_LIST) || DEFAULT_LOCAL_DOMAIN_LIST).split(",").map(domain => new RegExp(`^https?://${domain.trim()}(:\\d{1,5})?($|/)`));
    this._localDomainScope = Config.getString(LOCAL_DOMAIN_SCOPE) || DEFAULT_LOCAL_DOMAIN_SCOPE;
  }

}

module.exports = LocalDomainHandler;
