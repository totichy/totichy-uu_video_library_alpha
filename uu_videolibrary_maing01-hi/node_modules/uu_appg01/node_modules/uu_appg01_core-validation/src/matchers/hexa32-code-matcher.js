"use strict";

const Matcher = require("../matcher");
const ValidationResult = require("../validation-result");
const Validator = require("../validator");

class _Hexa32Code extends Matcher {
  constructor(...params) {
    super("hexa32Code");
    this.params = params;
  }

  match(value, ctx, ...args) {
    this.result = new ValidationResult();

    if (value == undefined) {
      return this;
    }

    const hexa32CodeReg = /^[0-9a-f]{32}$/;

    if (typeof value === "string" || value instanceof String) {
      if (!value.match(hexa32CodeReg)) {
        this.result.addInvalidValueError("hexa32Code.e001", "The value must be 32 characters long hexadecimal code.");
      }
    } else {
      this.result.addInvalidTypeError("hexa32Code.e001", "The value must be 32 characters long hexadecimal code.");
    }

    return this;
  }
}

function Hexa32Code(...params) {
  let matcher = new _Hexa32Code(...params);
  if (this && this.matchers && this.matchers[0]) {
    this.matchers.push(matcher);
    return this;
  } else {
    let validator = new Validator(null);
    validator._loadMatchers();
    validator.matchers = [matcher];
    return validator;
  }
}

module.exports = Hexa32Code;
