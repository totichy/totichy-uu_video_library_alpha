"use strict";

const Matcher = require("../matcher");
const ValidationResult = require("../validation-result");
const Validator = require("../validator");
const { Config } = require("uu_appg01_core-utils");

const UU_IDENTITY_DEFAULT_REGEX = /^[0-9]{1,4}-[0-9]{1,4}(-[0-9]{1,4}(-[0-9]{1,4})?)?$/;
const uuIdentityRegex = Config.get("uu_app_validation_uuidentity_pattern") || UU_IDENTITY_DEFAULT_REGEX;

class _UuIdentity extends Matcher {
  constructor(...params) {
    super("uuIdentity");
    this.params = params;
  }

  match(value, ctx, ...args) {
    this.result = new ValidationResult();

    if (value == undefined) {
      return this;
    }

    if (typeof value === "string" || value instanceof String) {
      if (!value.match(uuIdentityRegex)) {
        this.result.addInvalidValueError("uuIdentity.e001", "The value must be uuIdentity.");
      }
    } else {
      this.result.addInvalidTypeError("uuIdentity.e001", "The value must be uuIdentity.");
    }

    return this;
  }
}

function UuIdentity(...params) {
  let matcher = new _UuIdentity(...params);
  if (this && this.matchers && this.matchers[0]) {
    this.matchers.push(matcher);
    return this;
  } else {
    let validator = new Validator(null);
    validator._loadMatchers();
    validator.matchers = [matcher];
    return validator;
  }
}

module.exports = UuIdentity;
