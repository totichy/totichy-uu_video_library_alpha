/*!
 * UAF Licence for the uu5CodeKit software.
 * 
 * Copyright (c) 2016-present, Unicorn a.s.
 * All rights reserved.
 * 
 * Definitions
 * -----------
 * This licence agreement is based on the original "BSD Licence" published by
 * the Regents of the University of California in 1990.
 * 
 * The term "Software" means the uu5 package, its modules, components,
 * all program files, source code, examples, media, and documentation which are part
 * of the Software package, as well as any portion of them. The term "Author" means
 * Unicorn a.s. and all its subsidiaries and/or affiliates.
 * 
 * Licence Agreement
 * -----------------
 * 
 * Redistribution and use of this Software in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. All derivative products containing user interface must display the following
 *    acknowledgement in the appropriate "About window" or website section accessible
 *    by all users of the product:
 * 
 *      This product includes following software developed by
 *      <a href="https://unicorn.com">Unicorn a.s.</a>:
 *      <a href="https://uuos9.plus4u.net/uu-bookkitg01-main/78462435-86b4d5a4a030400784764ebdb972bbda/book">UAF</a>,
 *      <a href="https://uuos9.plus4u.net/uu-bookkitg01-main/78462435-ed11ec379073476db0aa295ad6c00178/book">uu5</a>.
 * 
 * 4. All derivative products must not block the default uu5 browser console message containing
 *    Software version information and copyright notice of the Author.
 * 
 * 5. The use of any portion of this Software is not allowed in the products
 *    that fully or partially resemble the functionality of the Software
 *    or otherwise compete with the Software unless they are licenced under the same licence
 *    conditions and provided free of charge. Specific prior written permission is required otherwise.
 * 
 * 6. Neither the name of the Author nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * Disclaimer
 * ----------
 * THIS SOFTWARE IS PROVIDED BY AUTHOR "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("module"), require("uu5g04"), require("uu5g04-forms"), require("react"), require("uu5g04-bricks"));
	else if(typeof define === 'function' && define.amd)
		define("uu5codekitg01", ["module", "uu5g04", "uu5g04-forms", "react", "uu5g04-bricks"], factory);
	else if(typeof exports === 'object')
		exports["uu5codekitg01"] = factory(require("module"), require("uu5g04"), require("uu5g04-forms"), require("react"), require("uu5g04-bricks"));
	else
		root["UU5"] = root["UU5"] || {}, root["UU5"]["CodeKit"] = factory(root["undefined"], root["UU5"], root["UU5"]["Forms"], root["React"], root["UU5"]["Bricks"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__9__, __WEBPACK_EXTERNAL_MODULE__15__, __WEBPACK_EXTERNAL_MODULE__16__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 	};
/******/
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"index": 0
/******/ 	};
/******/
/******/
/******/
/******/ 	// script path function
/******/ 	function jsonpScriptSrc(chunkId) {
/******/ 		return __webpack_require__.p + "chunks/uu5codekitg01/" + chunkId + "-" + "b3e30626bc927658321c" + ".js"
/******/ 	}
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		var promises = [];
/******/
/******/
/******/ 		// JSONP chunk loading for javascript
/******/
/******/ 		var installedChunkData = installedChunks[chunkId];
/******/ 		if(installedChunkData !== 0) { // 0 means "already installed".
/******/
/******/ 			// a Promise means "currently loading".
/******/ 			if(installedChunkData) {
/******/ 				promises.push(installedChunkData[2]);
/******/ 			} else {
/******/ 				// setup Promise in chunk cache
/******/ 				var promise = new Promise(function(resolve, reject) {
/******/ 					installedChunkData = installedChunks[chunkId] = [resolve, reject];
/******/ 				});
/******/ 				promises.push(installedChunkData[2] = promise);
/******/
/******/ 				// start chunk loading
/******/ 				var script = document.createElement('script');
/******/ 				var onScriptComplete;
/******/
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.src = jsonpScriptSrc(chunkId);
/******/
/******/ 				// create error before stack unwound to get useful stacktrace later
/******/ 				var error = new Error();
/******/ 				onScriptComplete = function (event) {
/******/ 					// avoid mem leaks in IE.
/******/ 					script.onerror = script.onload = null;
/******/ 					clearTimeout(timeout);
/******/ 					var chunk = installedChunks[chunkId];
/******/ 					if(chunk !== 0) {
/******/ 						if(chunk) {
/******/ 							var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 							var realSrc = event && event.target && event.target.src;
/******/ 							error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 							error.name = 'ChunkLoadError';
/******/ 							error.type = errorType;
/******/ 							error.request = realSrc;
/******/ 							chunk[1](error);
/******/ 						}
/******/ 						installedChunks[chunkId] = undefined;
/******/ 					}
/******/ 				};
/******/ 				var timeout = setTimeout(function(){
/******/ 					onScriptComplete({ type: 'timeout', target: script });
/******/ 				}, 120000);
/******/ 				script.onerror = script.onload = onScriptComplete;
/******/ 				document.head.appendChild(script);
/******/ 			}
/******/ 		}
/******/ 		return Promise.all(promises);
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// on error function for async loading
/******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
/******/
/******/ 	var jsonpArray = window["__webpack_jsonp_uu5codekitg01_1_8_3_uu5codekitg01"] = window["__webpack_jsonp_uu5codekitg01_1_8_3_uu5codekitg01"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(1);


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var mod = __webpack_require__(2);

var isDoc = typeof document !== "undefined";
var uri = ((mod ? mod.uri : isDoc && (document.currentScript || Array.prototype.slice.call(document.getElementsByTagName("script"), -1)[0] || {}).src) || "").toString();
uri = uri.split(/\//).slice(0, -1).join("/") + "/"; // runtime publicPath configuration required for proper linking of styles, background images, ...

var floatingVersion = "/1.0.0/";
if (uri.substr(-floatingVersion.length) === floatingVersion) uri = uri.substr(0, uri.length - floatingVersion.length) + "/1.8.3/";
__webpack_require__.p = uri;
module.exports = __webpack_require__(3);

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__2__;

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _codekit_codekit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5);
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "CodeKit", function() { return _codekit_codekit_js__WEBPACK_IMPORTED_MODULE_1__; });



if (true) {
  console.log("".concat("uu5codekitg01", "-").concat("1.8.3", " \xA9 Unicorn\nTerms of Use: https://unicorn.com/tou/").concat("uu5codekitg01"));
}

uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.addRuntimeLibrary({
  name: "uu5codekitg01",
  version: "1.8.3"
});

/* harmony default export */ __webpack_exports__["default"] = (_codekit_codekit_js__WEBPACK_IMPORTED_MODULE_1__); // merge into UU5
// NOTE "uu5g04" must ensure that the key already exists there, otherwise following usage wouldn't work:
//   import * as UU5 from "uu5g04";
//   import "uu5g04-forms";
//   console.log(UU5.Forms.TextArea);

for (var k in _codekit_codekit_js__WEBPACK_IMPORTED_MODULE_1__) {
  uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.CodeKit[k] = _codekit_codekit_js__WEBPACK_IMPORTED_MODULE_1__[k];
}

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__4__;

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _json_editor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "JsonEditor", function() { return _json_editor_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _uu5_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(33);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Uu5String", function() { return _uu5_string_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _uu5_string_editor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(34);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Uu5StringEditor", function() { return _uu5_string_editor_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _markdown_editor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MarkdownEditor", function() { return _markdown_editor_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _markdown_viewer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(48);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MarkdownViewer", function() { return _markdown_viewer_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _code_editor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(8);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CodeEditor", function() { return _code_editor_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _code_viewer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(51);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CodeViewer", function() { return _code_viewer_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });










/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _lib_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);
/* harmony import */ var _code_editor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _json_editor_less__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(31);
/* harmony import */ var _json_editor_less__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_json_editor_less__WEBPACK_IMPORTED_MODULE_3__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }





var JsonEditor = uu5g04__WEBPACK_IMPORTED_MODULE_2___default.a.Common.VisualComponent.create({
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_2___default.a.Common.BaseMixin],
  //@@viewOn:statics
  statics: {
    tagName: _lib_js__WEBPACK_IMPORTED_MODULE_0__["default"].app + ".JsonEditor",
    classNames: {
      main: _lib_js__WEBPACK_IMPORTED_MODULE_0__["default"].css + "-json-editor"
    },
    lsi: {
      invalidJson: {
        cs: "Zadaný JSON není validní.",
        en: "Invalid JSON.",
        sk: "Zadaný JSON nie je validný."
      }
    },
    opt: {
      hoc: true
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    format: uu5g04__WEBPACK_IMPORTED_MODULE_2___default.a.PropTypes.oneOf(["pretty", "minified", "default"]),
    valueFormat: uu5g04__WEBPACK_IMPORTED_MODULE_2___default.a.PropTypes.oneOf(["pretty", "minified", "object", "default"])
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      format: "default",
      valueFormat: "default"
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    var onFormat = this._getFormat(this.props);

    var valueFormat = this._getValueFormat(this.props);

    var value = typeof onFormat === "function" ? onFormat({
      value: this._prepareData(this.props.value),
      indent: this.props.indent
    }) : this._prepareData(this.props.value);
    return {
      value: value,
      onFormat: onFormat,
      getValueFormat: valueFormat
    };
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    var newState = {};
    var updated = false;

    if (this.props.format !== nextProps.format) {
      updated = true;
      newState.onFormat = this._getFormat(nextProps);
    }

    if (this.props.valueFormat !== nextProps.valueFormat) {
      updated = true;
      newState.getValueFormat = this._getValueFormat(nextProps);
    }

    var onFormat = newState.onFormat || this.state.onFormat;

    if (this.props.value !== nextProps.value) {
      updated = true;
      newState.value = typeof onFormat === "function" ? onFormat({
        value: this._prepareData(nextProps.value),
        indent: nextProps.indent || this.props.indent
      }) : this._prepareData(nextProps.value);
    }

    if (updated) {
      this.setState(newState);
    }

    return this;
  },
  //@@viewOff:standardComponentLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods
  //@@viewOn:componentSpecificHelpers
  _getFormat: function _getFormat() {
    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
    var onFormat;

    switch (props.format) {
      case "pretty":
        onFormat = this._beautify;
        break;

      case "minified":
        onFormat = this._minify;
        break;

      default:
        onFormat = null;
    }

    return onFormat;
  },
  _prepareData: function _prepareData(value) {
    return value instanceof Object ? JSON.stringify(value) : value;
  },
  _getValueFormat: function _getValueFormat() {
    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
    var onValueFormat;

    switch (props.valueFormat) {
      case "pretty":
        onValueFormat = this._beautify;
        break;

      case "minified":
        onValueFormat = this._minify;
        break;

      case "object":
        onValueFormat = this._object;
        break;

      default:
        onValueFormat = null;
    }

    return onValueFormat;
  },
  _object: function _object(input) {
    var value;

    try {
      value = JSON.parse(input.value);
    } catch (e) {//return string value
    }

    return value;
  },
  _beautify: function _beautify(input) {
    if (!input.value) return input.value;
    var indent = input.indent || 2;
    var r;

    try {
      r = input.value instanceof Object ? JSON.stringify(input.value, null, indent) : JSON.stringify(JSON.parse(input.value), null, indent);
    } catch (error) {
      r = input.value;
    }

    return r;
  },
  _minify: function _minify(input) {
    if (!input.value) return input.value;
    return input.value instanceof Object ? JSON.stringify(input.value) : JSON.stringify(JSON.parse(input.value));
  },
  _validateJson: function _validateJson(data) {
    var result;

    try {
      // if valueFormat is object it's already parse
      if (data.value && typeof data.value === "string") JSON.parse(data.value);
      result = {
        feedback: "success",
        message: null,
        value: data.value
      };
    } catch (e) {
      result = {
        feedback: "error",
        message: this.getLsiComponent("invalidJson"),
        value: data.value
      };
    }

    return result;
  },
  //@@viewOff:componentSpecificHelpers
  //@@viewOn:render
  render: function render() {
    return uu5g04__WEBPACK_IMPORTED_MODULE_2___default.a.Common.Element.create(_code_editor_js__WEBPACK_IMPORTED_MODULE_1__["default"], _extends({}, this.props, {
      value: this.state.value,
      codeStyle: "json",
      onFormat: this.state.onFormat,
      getValueFormat: this.state.getValueFormat,
      onValidate: this.props.onValidate || this._validateJson
    }));
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (JsonEditor);

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  app: "UU5.CodeKit",
  css: "uu5-codekit"
});

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_forms__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7);
/* harmony import */ var _ace_ace_editor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(10);
/* harmony import */ var _code_editor_less__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(29);
/* harmony import */ var _code_editor_less__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_code_editor_less__WEBPACK_IMPORTED_MODULE_4__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }






var CodeEditor = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].VisualComponent.create({
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].BaseMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].ElementaryMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Forms"].TextInputMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: _lib_js__WEBPACK_IMPORTED_MODULE_2__["default"].app + ".CodeEditor",
    classNames: {
      main: _lib_js__WEBPACK_IMPORTED_MODULE_2__["default"].css + "-code-editor"
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    onFormat: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps
  //@@viewOn:standardComponentLifeCycle
  componentWillMount: function componentWillMount() {
    if (this.props.onValidate && typeof this.props.onValidate === "function") {
      this._validateOnChange({
        value: this.state.value,
        component: this
      });
    } else {
      this.setFeedback(this.props.feedback || "initial", this.props.message, this.state.value);
    }

    return this;
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (this.props.controlled) {
      var value = nextProps.value === this.props.value ? this.state.value : nextProps.value;

      if (typeof nextProps.onFormat === "function") {
        value = nextProps.onFormat({
          value: value,
          indent: nextProps.indent
        });
      }

      if (nextProps.required && !value) {
        this.setError(nextProps.requiredMessage);
      } else {
        this.setFeedback(nextProps.feedback, nextProps.message, value);
      }
    }

    return this;
  },
  //@@viewOff:standardComponentLifeCycle
  //@@viewOn:interface
  insert: function insert(text) {
    this.getInput().insert(text);
  },
  reformat: function reformat(indent) {
    if (indent !== undefined) {
      // store set indent for one use. It will be deleted inside of setValue method
      this._indent = indent;
    }

    this.setValue(this.getInput().getValue());
    return this;
  },
  //@@viewOff:interface
  //@@viewOn:overridingMethods
  // TODO: tohle je ještě otázka - je potřeba nastavit hodnotu z jiné komponenty (musí být validace) a z onChange (neměla by být validace)
  setValue_: function setValue_(value, setStateCallback) {
    // format set value
    if (typeof this.props.onFormat === "function") {
      value = this.props.onFormat({
        value: value,
        indent: this._indent === undefined ? this.props.indent : this._indent
      });
    } // remove indent set from reformat function


    delete this._indent; // validate value

    if (this._checkRequired({
      value: value
    })) {
      if (typeof this.props.onValidate === "function") {
        this._validateOnChange({
          value: value,
          component: this
        });
      } else {
        this.props.required ? this.setSuccess(null, value, setStateCallback) : this.setInitial(null, value, setStateCallback);
      }
    }

    return this;
  },
  getValue_: function getValue_() {
    var value = this.getInput().getValue();

    if (typeof this.props.getValueFormat === "function") {
      value = this.props.getValueFormat({
        value: value,
        indent: this.props.indent
      });
    }

    return value;
  },
  //@@viewOff:overridingMethods
  //@@viewOn:componentSpecificHelpers
  _validateOnChange: function _validateOnChange(opt) {
    var result = typeof this.props.onValidate === "function" ? this.props.onValidate(opt) : null;

    if (result) {
      if (_typeof(result) === "object") {
        if (result.feedback) {
          this.setFeedback(result.feedback, result.message, result.value);
        } else {
          this.setState({
            value: opt.value
          });
        }
      } else {
        this.showError("validateError", null, {
          context: _objectSpread({}, opt.e && {
            event: opt.e
          }, {
            func: this.props.onValidate,
            result: result
          })
        });
      }
    }

    return this;
  },
  _onChange: function _onChange(e) {
    var opt = {
      value: this.getInput().getValue(),
      event: e,
      component: this
    };

    if (!this.isComputedDisabled() && !this.isReadOnly()) {
      if (typeof this.props.onChange === "function") {
        this.props.onChange(opt);
      } else if (this.props.validateOnChange) {
        this._validateOnChange(opt);
      } else {
        var result = this.getChangeFeedback(opt);
        this.setState({
          feedback: result.feedback,
          message: result.message,
          value: result.value
        });
      }
    }

    return this;
  },
  _onBlur: function _onBlur(e) {
    var opt = {
      value: this.getInput().getValue(),
      event: e,
      component: this
    };

    if (typeof this.props.onBlur === "function") {
      this.props.onBlur(opt);
    } else {
      if (this._checkRequired({
        value: opt.value
      }) && !this.props.validateOnChange) {
        opt.required = this.props.required;
        var blurResult = this.getBlurFeedback(opt);

        this._setFeedback(blurResult.feedback, blurResult.message, blurResult.value);
      }
    }

    return this;
  },
  _onFocus: function _onFocus(e) {
    var opt = {
      value: this.getInput().getValue(),
      event: e,
      component: this
    };

    if (typeof this.props.onFocus === "function") {
      this.props.onFocus(opt);
    } else {
      var result = this.getFocusFeedback(opt);
      result && this._setFeedback(result.feedback, result.message, result.value);
    }

    return this;
  },
  _getAceMainAttrs: function _getAceMainAttrs() {
    var attrs = _objectSpread({}, this.props.inputAttrs);

    var className = attrs.className;
    if (className == null) className = "";

    switch (!this.isComputedDisabled() && !this.isReadOnly() && this.getFeedback()) {
      case "success":
        className += " color-schema-" + uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].getColorSchema("success");
        break;

      case "warning":
        className += " color-schema-" + uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].getColorSchema("warning");
        break;

      case "error":
        className += " color-schema-" + uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].getColorSchema("danger");
        break;
    }

    if (className) attrs.className = className;
    return attrs;
  },
  //@@viewOff:componentSpecificHelpers
  //@@viewOn:render
  render: function render() {
    var _this = this;

    var inputId = this.getId() + "-code-editor";
    return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create("div", this._getInputAttrs(), this.getLabel(inputId), this.getInputWrapper([uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(_ace_ace_editor_js__WEBPACK_IMPORTED_MODULE_3__["default"], _extends({}, this.getMainPropsToPass(), this.props, {
      hidden: this.isHidden(),
      key: "aceEditor",
      id: inputId,
      ref_: function ref_(ace) {
        return _this._textInput = ace;
      },
      value: this.state.value,
      mainAttrs: this._getAceMainAttrs(),
      onChange: this._onChange,
      onBlur: this._onBlur,
      onFocus: this._onFocus,
      readOnly: this.isReadOnly() || this.isComputedDisabled(),
      disabled: this.isComputedDisabled(),
      controlled: true
    }))]));
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (CodeEditor);

/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__9__;

/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "propTypes", function() { return propTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultProps", function() { return defaultProps; });
/* harmony import */ var lodash_isequal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var lodash_isequal__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isequal__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _inject_ace__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(16);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(uu5g04_bricks__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _lib_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7);
/* harmony import */ var _mode_uu5_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(17);
/* harmony import */ var _ace_editor_less__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(27);
/* harmony import */ var _ace_editor_less__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_ace_editor_less__WEBPACK_IMPORTED_MODULE_6__);
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

//@@viewOn:revision
// coded: Martin Mach, 22.09.2020
// reviewed: Filip Janovský, 29.09.2020
//@@viewOff:revision







var propTypes = {
  ace: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].object,
  codeStyle: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].string,
  focus: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].bool,
  theme: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].string,
  className: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].string,
  height: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].string, uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].number]),
  width: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].string, uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].number]),
  fontSize: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].number, uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].string]),
  showGutter: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].bool,
  showBorder: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].bool,
  padding: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].number,
  onChange: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].func,
  onCopy: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].func,
  onPaste: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].func,
  onFocus: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].func,
  onBlur: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].func,
  onScroll: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].func,
  value: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].string,
  defaultValue: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].string,
  onLoad: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].func,
  onBeforeLoad: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].func,
  minRows: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].number,
  maxRows: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].number,
  rows: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].number,
  readOnly: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].bool,
  highlightActiveLine: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].bool,
  highlightAttrsSyntax: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].bool,
  // whether to highlight uu5string tags nested in other uu5strings
  indent: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].number,
  showPrintMargin: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].bool,
  cursorStart: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].number,
  editorProps: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].object,
  annotations: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].array,
  markers: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].arrayOf(uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].number, // single row marker
  uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].arrayOf(uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].number, uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].string])), // multiple row / row & column marker, optionally ended with colorSchema
  uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].shape({
    startRow: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].number.isRequired,
    startColumn: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].number,
    endRow: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].number,
    endColumn: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].number,
    colorSchema: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].string
  })])),
  keyboardHandler: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].string,
  wrapEnabled: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].bool,
  enableBasicAutocompletion: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].bool, uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].array]),
  enableLiveAutocompletion: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].bool, uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].array]),
  commands: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].array,
  style: uu5g04__WEBPACK_IMPORTED_MODULE_2__["PropTypes"].object
};
var defaultProps = {
  focus: false,
  codeStyle: "text",
  theme: "chrome",
  height: "",
  width: "auto",
  value: "",
  fontSize: 13,
  showGutter: true,
  showBorder: true,
  padding: 7,
  onChange: null,
  onPaste: null,
  onLoad: null,
  onScroll: null,
  minRows: null,
  maxRows: null,
  rows: 20,
  readOnly: false,
  highlightActiveLine: false,
  showPrintMargin: false,
  indent: 2,
  cursorStart: 1,
  editorProps: {
    $blockScrolling: true,
    autoScrollEditorIntoView: true
  },
  wrapEnabled: false,
  enableBasicAutocompletion: false,
  enableLiveAutocompletion: false,
  markers: []
};
var AceEditor = uu5g04__WEBPACK_IMPORTED_MODULE_2__["Common"].VisualComponent.create({
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_2__["Common"].BaseMixin, uu5g04__WEBPACK_IMPORTED_MODULE_2__["Common"].ElementaryMixin, uu5g04__WEBPACK_IMPORTED_MODULE_2__["Common"].PureRenderMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: _lib_js__WEBPACK_IMPORTED_MODULE_4__["default"].app + ".AceEditor",
    classNames: {
      main: _lib_js__WEBPACK_IMPORTED_MODULE_4__["default"].css + "-ace-editor",
      viewer: _lib_js__WEBPACK_IMPORTED_MODULE_4__["default"].css + "-ace-editor-viewer",
      marker: _lib_js__WEBPACK_IMPORTED_MODULE_4__["default"].css + "-ace-editor-marker",
      markerDefault: _lib_js__WEBPACK_IMPORTED_MODULE_4__["default"].css + "-ace-editor-marker-default",
      highlightAttrsSyntax: _lib_js__WEBPACK_IMPORTED_MODULE_4__["default"].css + "-ace-editor-highlight-attrs-syntax"
    },
    editorOptions: ["readOnly", "highlightActiveLine", "enableBasicAutocompletion", "enableLiveAutocompletion", "enableSnippets"]
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: propTypes,
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return defaultProps;
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      loaded: false
    };
  },
  componentDidMount: function componentDidMount() {
    var _this = this;

    var _this$props = this.props,
        ace = _this$props.ace,
        className = _this$props.className,
        onBeforeLoad = _this$props.onBeforeLoad,
        codeStyle = _this$props.codeStyle,
        focus = _this$props.focus,
        theme = _this$props.theme,
        fontSize = _this$props.fontSize,
        cursorStart = _this$props.cursorStart,
        showGutter = _this$props.showGutter,
        wrapEnabled = _this$props.wrapEnabled,
        showPrintMargin = _this$props.showPrintMargin,
        keyboardHandler = _this$props.keyboardHandler,
        onLoad = _this$props.onLoad,
        commands = _this$props.commands,
        annotations = _this$props.annotations,
        markers = _this$props.markers;
    var editorOptions = this.constructor.editorOptions;
    var ed = this.editor = ace.edit(this._editor);
    var session = this.editor.getSession();
    if (onBeforeLoad) onBeforeLoad(ace);
    var editorProps = Object.keys(this.props.editorProps);

    for (var i = 0; i < editorProps.length; i++) {
      ed[editorProps[i]] = this.props.editorProps[editorProps[i]];
    }

    var val = this.props.value || this.props.defaultValue || "";

    var usedMode = this._modeAlias(codeStyle);

    var modeOptions = {
      path: "ace/mode/" + usedMode
    };

    if (usedMode === "uu5") {
      Object(_mode_uu5_js__WEBPACK_IMPORTED_MODULE_5__["default"])(ace);
      modeOptions.editor = ed;
      modeOptions.highlightAttrsSyntax = this.props.highlightAttrsSyntax;
      modeOptions.useCompleters = this.props.enableBasicAutocompletion;
    }

    ed.setTheme("ace/theme/".concat(theme));
    ed.setFontSize(fontSize);

    if (val && typeof val === "string") {
      ed.setValue(val, cursorStart);
    }

    ed.renderer.setShowGutter(showGutter);
    ed.setShowPrintMargin(showPrintMargin);
    ed.renderer.setScrollMargin(this.props.padding, this.props.padding);
    ed.renderer.setPadding(this.props.padding);
    if (this.props.onFocus) ed.on("focus", this.props.onFocus);
    if (this.props.onBlur) ed.on("blur", function () {
      var _this$props2;

      return _this.isRendered() && (_this$props2 = _this.props).onBlur.apply(_this$props2, arguments);
    }); // if Ace editor is destroyed in unmount, it'll still fire 'blur' later (at the time of its DOM node removal)

    if (this.props.onCopy) ed.on("copy", this.props.onCopy);
    if (this.props.onPaste) ed.on("paste", this.props.onPaste);
    if (this.props.onChange && !this.silent) ed.on("change", function (e) {
      if (!_this._willReceiveProps) {
        typeof _this.props.onChange === "function" && _this.props.onChange(e);
      }
    });
    if (this.props.onScroll) session.on("changeScrollTop", this.props.onScroll); // get a list of possible options to avoid 'misspelled option errors'

    if (!this.props.readOnly && usedMode === "uu5" && this.props.highlightAttrsSyntax) {
      ed.setOption("displayIndentGuides", false);
    }

    var availableOptions = ed.$options;

    for (var _i = 0; _i < editorOptions.length; _i++) {
      var option = editorOptions[_i];

      if (availableOptions.hasOwnProperty(option)) {
        ed.setOption(option, this.props[option]);
      }
    } // disable textCompleter which suggests words from editor's value content (must be done after setting options)


    if (ed.completers) {
      ace.require(["ace/ext/language_tools"], function (languageTools) {
        var textCompleter = languageTools.textCompleter,
            snippetCompleter = languageTools.snippetCompleter;
        ed.completers = _toConsumableArray(ed.completers); // copy, otherwise we would be modifying default instance (shared among editors)

        var index = ed.completers.indexOf(textCompleter);
        if (index !== -1) ed.completers.splice(index, 1);

        if (!_this.props.enableSnippets) {
          // Ace fix - must remove snippet completer because if there're multiple editors in page
          // then enabling snippets in one would enable it in all
          index = ed.completers.indexOf(snippetCompleter);
          if (index !== -1) ed.completers.splice(index, 1);
        }
      });

      if (typeof ed._emit === "function") ed._emit("__uu_editorCompletersInit", {});
    }

    ed.commands.on("afterExec", function (e) {
      if (e.command.name === "startAutocomplete" || e.command.name === "insertstring") {
        // hide autocomplete popup on window scroll
        if (ed.completer && !ed.completer.__windowScrollFeature) {
          ed.completer.__windowScrollFeature = true;

          var onScrollOrResize = function onScrollOrResize(e) {
            window.removeEventListener("scroll", onScrollOrResize);
            window.removeEventListener("resize", onScrollOrResize);
            ed.completer && ed.completer.popup && ed.completer.popup.off("mousewheel", onMouseWheelInAutocomplete);
            ed.completer && ed.completer.detach();
          };

          var onMouseWheelInAutocomplete = function onMouseWheelInAutocomplete(e) {
            var curTarget = e.domEvent.currentTarget;
            var scrollerEl = curTarget.querySelector(".ace_scrollbar-v");

            if (scrollerEl) {
              // don't allow scroll to bleed out to body as that would close the autocomplete list
              if (e.wheelY < 0 && scrollerEl.scrollTop === 0) e.preventDefault();
              if (e.wheelY > 0 && scrollerEl.scrollTop + scrollerEl.clientHeight >= scrollerEl.scrollHeight) e.preventDefault();
              e.stopPropagation();
            }
          };

          var origShowPopup = ed.completer.showPopup;

          ed.completer.showPopup = function () {
            var result = origShowPopup.apply(this, arguments);
            window.addEventListener("scroll", onScrollOrResize);
            window.addEventListener("resize", onScrollOrResize);
            ed.completer.getPopup().on("mousewheel", onMouseWheelInAutocomplete);
            return result;
          };

          var origDetach = ed.completer.detach;

          ed.completer.detach = function () {
            window.removeEventListener("scroll", onScrollOrResize);
            window.removeEventListener("resize", onScrollOrResize);
            ed.completer.getPopup().off("mousewheel", onMouseWheelInAutocomplete);
            var result = origDetach.apply(this, arguments);
            return result;
          };

          if (ed.completer.activated) {
            window.addEventListener("scroll", onScrollOrResize);
            window.addEventListener("resize", onScrollOrResize);
            ed.completer.getPopup().on("mousewheel", onMouseWheelInAutocomplete);
          }
        }
      }
    });
    if (this.props.indent) ed.setOption("tabSize", this.props.indent);
    var minRows = this.props.minRows || this.props.rows;
    var maxRows = this.props.maxRows || this.props.rows;
    if (minRows) ed.setOption("minLines", minRows);
    if (maxRows) ed.setOption("maxLines", maxRows);

    if (Array.isArray(commands)) {
      commands.forEach(function (command) {
        ed.commands.addCommand(command);
      });
    }

    if (keyboardHandler) ed.setKeyboardHandler("ace/keyboard/".concat(keyboardHandler));

    if (this.props.readOnly) {
      ed.renderer.$cursorLayer.element.style.display = "none";
      ed.renderer.scrollPastEnd = false;
      session.setOption("useWorker", false); // ed.commands.on('exec', function (e) {
      //   e.preventDefault()
      // });

      session.setFoldStyle("manual");
    }

    session.setAnnotations(annotations || []);
    session.setMode(modeOptions);
    session.setUseWrapMode(wrapEnabled);

    this._setMarkers(markers);

    if (focus) this.focus();
    if (onLoad) onLoad(this.editor);
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    var oldProps = this.props;
    var editorOptions = this.constructor.editorOptions;
    var ed = this.editor;
    var session = this.editor.getSession();

    for (var i = 0; i < editorOptions.length; i++) {
      var option = editorOptions[i];
      if (nextProps[option] !== oldProps[option]) ed.setOption(option, nextProps[option]);
    }

    var minRows = nextProps.minRows || nextProps.rows;
    var maxRows = nextProps.maxRows || nextProps.rows;
    var oldMinRows = this.props.minRows || this.props.rows;
    var oldMaxRows = this.props.maxRows || this.props.rows;
    if (nextProps.indent !== oldProps.indent) ed.setOption("tabSize", nextProps.indent);
    if (minRows !== oldMinRows) ed.setOption("minLines", minRows);
    if (maxRows !== oldMaxRows) ed.setOption("maxLines", maxRows); // if (nextProps.className !== oldProps.className) {
    //   const appliedClasses = this._editor.className;
    //   const appliedClassesArray = appliedClasses.trim().split(' ');
    //   const oldClassesArray = oldProps.className.trim().split(' ');
    //   oldClassesArray.forEach((oldClass) => {
    //     const index = appliedClassesArray.indexOf(oldClass);
    //     appliedClassesArray.splice(index, 1);
    //   });
    //   this._editor.className = ' ' + nextProps.className + ' ' + appliedClassesArray.join(' ');
    // }

    if (nextProps.codeStyle !== oldProps.codeStyle) {
      session.setMode("ace/mode/".concat(this._modeAlias(nextProps.codeStyle)));
    }

    if (nextProps.theme !== oldProps.theme) {
      ed.setTheme("ace/theme/" + nextProps.theme);
    }

    if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {
      if (nextProps.keyboardHandler) {
        ed.setKeyboardHandler("ace/keyboard/" + nextProps.keyboardHandler);
      } else {
        ed.setKeyboardHandler(null);
      }
    }

    if (nextProps.fontSize !== oldProps.fontSize) {
      ed.setFontSize(nextProps.fontSize);
    }

    if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {
      session.setUseWrapMode(nextProps.wrapEnabled);
    }

    if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {
      ed.setShowPrintMargin(nextProps.showPrintMargin);
    }

    if (nextProps.showGutter !== oldProps.showGutter) {
      ed.renderer.setShowGutter(nextProps.showGutter);
    }

    if (nextProps.padding !== oldProps.padding) {
      ed.renderer.setScrollMargin(nextProps.padding, nextProps.padding);
      ed.renderer.setPadding(nextProps.padding);
    }

    if (!lodash_isequal__WEBPACK_IMPORTED_MODULE_0___default()(nextProps.annotations, oldProps.annotations)) {
      session.setAnnotations(nextProps.annotations || []);
    }

    if (!lodash_isequal__WEBPACK_IMPORTED_MODULE_0___default()(nextProps.markers, oldProps.markers)) {
      this._setMarkers(nextProps.markers);
    }

    var val = nextProps.value || nextProps.defaultValue || "";

    if (ed.getValue() !== val) {
      // editor.setValue is a synchronous function call, change event is emitted before setValue return.
      this.silent = true;
      var pos = session.selection.toJSON();
      this._willReceiveProps = true;

      if (val && typeof val === "string") {
        ed.setValue(val, nextProps.cursorStart);
      }

      session.selection.fromJSON(pos);
      this.silent = false;
      this._willReceiveProps = false;
    }

    if (nextProps.focus && !oldProps.focus) {
      this.focus();
    }

    if (nextProps.height !== this.props.height) {
      ed.resize();
    }
  },
  componentWillUnmount: function componentWillUnmount() {
    this.editor.destroy();
    this.editor = null;
  },
  componentWillUpdate: function componentWillUpdate() {
    var _this2 = this;

    if (this._editor) {
      this._classesToPreserve = [];

      var aceClasses = _toConsumableArray(this._editor.classList);

      aceClasses.map(function (className) {
        if (className.match(/^ace/g)) {
          _this2._classesToPreserve.push(className);
        }
      });
    }
  },
  componentDidUpdate: function componentDidUpdate(nextState) {
    var _this3 = this;

    if (this._editor) {
      this._classesToPreserve.map(function (className) {
        _this3._editor.classList.add(className);
      });

      this._classesToPreserve = [];
    }

    if (this.props.readOnly) {
      this.editor.renderer.$cursorLayer.element.style.display = "none";
    } else {
      this.editor.renderer.$cursorLayer.element.style.display = "initial";
    }
  },
  //@@viewOff:standardComponentLifeCycle
  //@@viewOn:interface
  setValue: function setValue(text) {
    var pos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
    this.editor.setValue(text, pos);
  },
  getValue: function getValue(format) {
    return format ? format(this.editor.getValue()) : this.editor.getValue();
  },
  insert: function insert(text) {
    if (text) this.editor.insert(text);
  },
  focus: function focus() {
    this.editor.focus(); //Go to the first line

    this.editor.gotoLine(0, 0);
  },
  copyToClipboard: function copyToClipboard() {
    //TODO call codekit interface when implemented
    var editor = this.editor;
    var sel = editor.selection.toJSON(); // save selection

    editor.selectAll();
    editor.focus();
    document.execCommand("copy");
    editor.selection.fromJSON(sel); // restore selection
  },
  //@@viewOff:interface
  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods
  //@@viewOn:componentSpecificHelpers
  _modeAlias: function _modeAlias(mode) {
    switch (mode) {
      case "js":
      case "javascript":
        mode = "javascript";
        break;

      case "bash":
      case "sh":
        mode = "sh";
        break;

      case "asm":
      case "assembly":
      case "assembly_x86":
        mode = "assembly_x86";
        break;

      case "c":
      case "cpp":
      case "c++":
        mode = "c_cpp";
        break;

      case "batchfile":
      case "bat":
      case "batch":
      case "msdos":
        mode = "batchfile";
        break;

      case "coffee":
      case "coffeescript":
        mode = "coffee";
        break;

      case "csharp":
      case "c#":
      case "cs":
        mode = "csharp";
        break;

      case "dockerfile":
      case "docker":
        mode = "dockerfile";
        break;

      case "go":
      case "golang":
        mode = "golang";
        break;

      case "html_ruby":
      case "erb":
      case "rhtml":
        mode = "html_ruby";
        break;
    }

    return mode;
  },
  _normalizeMarker: function _normalizeMarker(item) {
    var marker;
    if (typeof item === "number") marker = {
      startRow: item
    };else if (Array.isArray(item) && item.length > 0) {
      var lastUsableIdx = item.length - 1;
      var colorSchema;
      if (typeof item[item.length - 1] === "string") colorSchema = item[lastUsableIdx--];
      if (lastUsableIdx >= 2) marker = {
        startRow: item[0],
        startColumn: item[1],
        endRow: item[2],
        endColumn: lastUsableIdx >= 3 ? item[3] : undefined
      };else marker = {
        startRow: item[0],
        endRow: lastUsableIdx >= 1 ? item[1] : undefined
      };
      if (colorSchema) marker.colorSchema = colorSchema;
    } else if (_typeof(item) === "object") marker = item;
    if (marker && typeof marker.startRow != "number") marker = undefined;
    return marker;
  },
  _setMarkers: function _setMarkers(markers) {
    var _this4 = this;

    var ace = this.props.ace;
    var session = this.editor.getSession();

    if (this._markers) {
      this._markers.forEach(function (marker) {
        return session.removeMarker(marker);
      });

      delete this._markers;
    }

    if (Array.isArray(markers)) {
      var Range = ace.require("ace/range").Range;

      this._markers = markers.map(function (item) {
        return _this4._normalizeMarker(item);
      }).filter(function (marker) {
        return marker != null;
      }).map(function (marker) {
        var isFullLine = marker.startColumn == null && marker.endColumn == null; // some fiddling around with replacing null values to get AceEditor behave as we want

        var aceRange = [// numbers are 1-based so that row numbers in gutter correspond exactly
        Math.max(0, marker.startRow - 1), Math.max(0, marker.startColumn - 1), marker.endRow != null ? Math.max(0, marker.endRow - 1) : undefined, marker.endColumn // -1+1 (-1 because we're 1-based; +1 because we want it to be inclusive and Ace expects exclusive)
        ];
        if (aceRange[2] == null) aceRange[2] = aceRange[0]; // always provide end row

        if (aceRange[0] === aceRange[2] && aceRange[1] == null && aceRange[3] == null) aceRange[1] = 0; // must set start column to 0 if both rows are same and columns are not given

        if (!isFullLine && typeof aceRange[1] === "number" && aceRange[2] != null && aceRange[3] == null) aceRange[3] = 100000; // if no end column is given while highlighting text (no full lines), highlight upto last character (just provide big enough number)

        var range = _construct(Range, aceRange);

        var colorSchema = marker.colorSchema ? uu5g04__WEBPACK_IMPORTED_MODULE_2__["Environment"].getColorSchema(marker.colorSchema) : null;
        var cssClass = [_this4.getClassName("marker"), "uu5-common-bg", colorSchema ? "color-schema-".concat(colorSchema) : _this4.getClassName("markerDefault")].join(" ");
        return session.addMarker(range, cssClass, isFullLine ? "fullLine" : "text", false); // fullLine, screenLine, text, line
      });
    }
  },
  //@@viewOff:componentSpecificHelpers
  //@@viewOn:render
  render: function render() {
    var _this5 = this;

    var _this$props3 = this.props,
        width = _this$props3.width,
        height = _this$props3.height,
        showBorder = _this$props3.showBorder;
    var attrs = this.getMainAttrs();

    if (this.props.borderRadius) {
      attrs.style = _objectSpread({}, attrs.style, {
        borderRadius: this.props.borderRadius
      });
    }

    if (this.props.bgStyle) {
      attrs.className += " " + uu5g04__WEBPACK_IMPORTED_MODULE_2__["Common"].ClassNames[this.props.bgStyle];
    }

    if (this.props.elevation) {
      attrs.className += " " + uu5g04__WEBPACK_IMPORTED_MODULE_2__["Common"].ClassNames.elevation + this.props.elevation;
    }

    if (this.props.highlightAttrsSyntax) {
      attrs.className += " " + this.getClassName("highlightAttrsSyntax");
    }

    attrs.style = attrs.style || {};
    attrs.style.width = width || attrs.style.width;
    attrs.style.height = this.props.rows ? this.props.rows * 15 + 12 + "px" : this.props.height || "500px";
    if (!showBorder) attrs.style.border = 0;

    attrs.ref = function (editor) {
      return _this5._editor = editor;
    };

    attrs.id = this.getId(); // this.props.readOnly && (attrs.className += ' ' + this.getClassName('viewer'));

    return uu5g04__WEBPACK_IMPORTED_MODULE_2__["Common"].Element.create("div", attrs);
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (Object(_inject_ace__WEBPACK_IMPORTED_MODULE_1__["default"])(AceEditor, uu5g04__WEBPACK_IMPORTED_MODULE_2__["Bricks"].Loading));

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {/**
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    asyncTag = '[object AsyncFunction]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    nullTag = '[object Null]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    proxyTag = '[object Proxy]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    undefinedTag = '[object Undefined]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    Symbol = root.Symbol,
    Uint8Array = root.Uint8Array,
    propertyIsEnumerable = objectProto.propertyIsEnumerable,
    splice = arrayProto.splice,
    symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols,
    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
    nativeKeys = overArg(Object.keys, Object);

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView'),
    Map = getNative(root, 'Map'),
    Promise = getNative(root, 'Promise'),
    Set = getNative(root, 'Set'),
    WeakMap = getNative(root, 'WeakMap'),
    nativeCreate = getNative(Object, 'create');

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length &&
    (typeof value == 'number' || reIsUint.test(value)) &&
    (value > -1 && value % 1 == 0 && value < length);
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
function isEqual(value, other) {
  return baseIsEqual(value, other);
}

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = isEqual;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(12), __webpack_require__(13)(module)))

/***/ }),
/* 12 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_1__);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


 // const _url = "https://cdnjs.cloudflare.com/ajax/libs/ace/1.3.3/ace.js";

var _url = "https://cdn.plus4u.net/libs/ace/1.3.3/src-min-noconflict/ace.js";
var _onLoad = [];
var _isLoading = false;
var _languageToolsLoaded = false;
var _scrollbarWidthPerfFixed = false;

function load(url, includeLanguageTools, cb) {
  if (includeLanguageTools) {
    var origCb = cb;

    cb = function cb() {
      // NOTE This loads the module only once even if called multiple times.
      window.ace.config.loadModule("ace/ext/language_tools", function () {
        _languageToolsLoaded = true;
        origCb();
      });
    };
  }

  if (!_scrollbarWidthPerfFixed) {
    _scrollbarWidthPerfFixed = true;
    var _origCb = cb;

    cb = function cb() {
      window.ace.require(["ace/lib/dom"], function (dom) {
        dom.scrollbarWidth = uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Environment.getScrollBarWidth;

        _origCb();
      });
    };
  }

  if (window.ace) cb();else {
    _onLoad.push(cb);

    if (!_isLoading) {
      _isLoading = true;
      var result;
      var script = document.createElement("script");
      var container = document.getElementsByTagName("head")[0] || document.getElementsByTagName("body")[0];
      script.type = "text/javascript";
      script.src = url;
      script.async = true; //script.onreadystatechange for IE compatibility

      script.onload = script.onreadystatechange = function () {
        var ready = !this.readyState || this.readyState == "complete";

        if (!result && ready) {
          result = true;

          _onLoad.forEach(function (_cb) {
            return _cb();
          });
        }
      };

      container.appendChild(script);
    }
  }
}

/* harmony default export */ __webpack_exports__["default"] = (function (Component, Loading, url) {
  return /*#__PURE__*/function (_React$Component) {
    _inherits(InjectAce, _React$Component);

    var _super = _createSuper(InjectAce);

    function InjectAce() {
      _classCallCheck(this, InjectAce);

      return _super.apply(this, arguments);
    }

    _createClass(InjectAce, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this = this;

        this._mounted = true;
        url = url || _url;

        if (!window.ace || this._needsLanguageTools() && !_languageToolsLoaded || !_scrollbarWidthPerfFixed) {
          load(url, this._needsLanguageTools(), function () {
            if (_this._mounted) _this.forceUpdate();
          });
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this._mounted = false;
      }
    }, {
      key: "_needsLanguageTools",
      value: function _needsLanguageTools() {
        return this.props.enableSnippets || this.props.enableBasicAutocompletion || this.props.enableLiveAutocompletion;
      }
    }, {
      key: "render",
      value: function render() {
        return window.ace && (_languageToolsLoaded || !this._needsLanguageTools()) ? uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Common.Element.create(Component, _extends({
          ace: window.ace
        }, this.props)) : uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Common.Element.create(Loading, null);
      }
    }]);

    return InjectAce;
  }(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);
});

/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__15__;

/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__16__;

/***/ }),
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return defineAceModeUu5; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _on_demand_component_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18);
/* harmony import */ var _mode_uu5_highlighter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(19);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }




var defined;
function defineAceModeUu5(ace) {
  if (defined) return;
  defined = true;
  var UU5_WORKER_REL_URL =  true ? "./uu5codekitg01-ace-mode-uu5-worker.js" : undefined;
  var UU5_WORKER_URL = Object(_on_demand_component_js__WEBPACK_IMPORTED_MODULE_1__["normalizeUrl"])(UU5_WORKER_REL_URL); // ace 1.2.8 mode-xml.js with changes:
  // 1. Annotated using NOTE marker.
  // 2. Changed module names containing "/xml" into "/uu5".
  // NOTE Highlighter separated into mode-uu5/highlighter.js

  Object(_mode_uu5_highlighter_js__WEBPACK_IMPORTED_MODULE_2__["default"])(ace);
  ace.define("ace/mode/behaviour/uu5", ["require", "exports", "module", "ace/lib/oop", "ace/mode/behaviour", "ace/token_iterator", "ace/lib/lang"], function (require, exports, module) {
    "use strict";

    var oop = require("../../lib/oop");

    var Behaviour = require("../behaviour").Behaviour;

    var TokenIterator = require("../../token_iterator").TokenIterator;

    var lang = require("../../lib/lang");

    function is(token, type) {
      return token.type.lastIndexOf(type + ".xml") > -1;
    }

    var XmlBehaviour = function XmlBehaviour() {
      this.add("string_dquotes", "insertion", function (state, action, editor, session, text) {
        if (text == '"' || text == "'") {
          var quote = text;
          var selected = session.doc.getTextRange(editor.getSelectionRange());

          if (selected !== "" && selected !== "'" && selected != '"' && editor.getWrapBehavioursEnabled()) {
            return {
              text: quote + selected + quote,
              selection: false
            };
          }

          var cursor = editor.getCursorPosition();
          var line = session.doc.getLine(cursor.row);
          var rightChar = line.substring(cursor.column, cursor.column + 1);
          var iterator = new TokenIterator(session, cursor.row, cursor.column);
          var token = iterator.getCurrentToken();

          if (rightChar == quote && (is(token, "attribute-value") || is(token, "string"))) {
            return {
              text: "",
              selection: [1, 1]
            };
          }

          if (!token) token = iterator.stepBackward();
          if (!token) return;

          while (is(token, "tag-whitespace") || is(token, "whitespace")) {
            token = iterator.stepBackward();
          }

          var rightSpace = !rightChar || rightChar.match(/\s/);

          if (is(token, "attribute-equals") && (rightSpace || rightChar == ">") || is(token, "decl-attribute-equals") && (rightSpace || rightChar == "?")) {
            return {
              text: quote + quote,
              selection: [1, 1]
            };
          }
        }
      });
      this.add("string_dquotes", "deletion", function (state, action, editor, session, range) {
        var selected = session.doc.getTextRange(range);

        if (!range.isMultiLine() && (selected == '"' || selected == "'")) {
          var line = session.doc.getLine(range.start.row);
          var rightChar = line.substring(range.start.column + 1, range.start.column + 2);

          if (rightChar == selected) {
            range.end.column++;
            return range;
          }
        }
      });
      this.add("autoclosing", "insertion", function (state, action, editor, session, text) {
        if (text == ">") {
          var position = editor.getSelectionRange().start;
          var iterator = new TokenIterator(session, position.row, position.column);
          var token = iterator.getCurrentToken() || iterator.stepBackward();
          if (!token || !(is(token, "tag-name") || is(token, "tag-whitespace") || is(token, "attribute-name") || is(token, "attribute-equals") || is(token, "attribute-value"))) return;
          if (is(token, "reference.attribute-value")) return;

          if (is(token, "attribute-value")) {
            var firstChar = token.value.charAt(0);

            if (firstChar == '"' || firstChar == "'") {
              var lastChar = token.value.charAt(token.value.length - 1);
              var tokenEnd = iterator.getCurrentTokenColumn() + token.value.length;
              if (tokenEnd > position.column || tokenEnd == position.column && firstChar != lastChar) return;
            }
          }

          while (!is(token, "tag-name")) {
            token = iterator.stepBackward();

            if (token.value == "<") {
              token = iterator.stepForward();
              break;
            }
          }

          var tokenRow = iterator.getCurrentTokenRow();
          var tokenColumn = iterator.getCurrentTokenColumn();
          if (is(iterator.stepBackward(), "end-tag-open")) return;
          var element = token.value;
          if (tokenRow == position.row) element = element.substring(0, position.column - tokenColumn);
          if (this.voidElements.hasOwnProperty(element.toLowerCase())) return;
          return {
            text: ">" + "</" + element + ">",
            selection: [1, 1]
          };
        }
      });
      this.add("autoindent", "insertion", function (state, action, editor, session, text) {
        if (text == "\n") {
          var cursor = editor.getCursorPosition();
          var line = session.getLine(cursor.row);
          var iterator = new TokenIterator(session, cursor.row, cursor.column);
          var token = iterator.getCurrentToken();

          if (token && token.type.indexOf("tag-close") !== -1) {
            if (token.value == "/>") return;

            while (token && token.type.indexOf("tag-name") === -1) {
              token = iterator.stepBackward();
            }

            if (!token) {
              return;
            }

            var tag = token.value;
            var row = iterator.getCurrentTokenRow();
            token = iterator.stepBackward();

            if (!token || token.type.indexOf("end-tag") !== -1) {
              return;
            }

            if (this.voidElements && !this.voidElements[tag]) {
              var nextToken = session.getTokenAt(cursor.row, cursor.column + 1);
              var line = session.getLine(row);
              var nextIndent = this.$getIndent(line);
              var indent = nextIndent + session.getTabString();

              if (nextToken && nextToken.value === "</") {
                return {
                  text: "\n" + indent + "\n" + nextIndent,
                  selection: [1, indent.length, 1, indent.length]
                };
              } else {
                return {
                  text: "\n" + indent
                };
              }
            }
          }
        }
      });
    };

    oop.inherits(XmlBehaviour, Behaviour);
    exports.XmlBehaviour = XmlBehaviour;
  });
  ace.define("ace/mode/folding/uu5", ["require", "exports", "module", "ace/lib/oop", "ace/lib/lang", "ace/range", "ace/mode/folding/fold_mode", "ace/token_iterator"], function (require, exports, module) {
    "use strict";

    var oop = require("../../lib/oop");

    var lang = require("../../lib/lang");

    var Range = require("../../range").Range;

    var BaseFoldMode = require("./fold_mode").FoldMode;

    var TokenIterator = require("../../token_iterator").TokenIterator;

    var FoldMode = exports.FoldMode = function (voidElements, optionalEndTags) {
      BaseFoldMode.call(this);
      this.voidElements = voidElements || {};
      this.optionalEndTags = oop.mixin({}, this.voidElements);
      if (optionalEndTags) oop.mixin(this.optionalEndTags, optionalEndTags);
    };

    oop.inherits(FoldMode, BaseFoldMode);

    var Tag = function Tag() {
      this.tagName = "";
      this.closing = false;
      this.selfClosing = false;
      this.start = {
        row: 0,
        column: 0
      };
      this.end = {
        row: 0,
        column: 0
      };
    };

    function is(token, type) {
      return token.type.lastIndexOf(type + ".xml") > -1;
    }

    (function () {
      this.getFoldWidget = function (session, foldStyle, row) {
        var tag = this._getFirstTagInLine(session, row);

        if (!tag) return this.getCommentFoldWidget(session, row);
        if (tag.closing || !tag.tagName && tag.selfClosing) return foldStyle == "markbeginend" ? "end" : "";
        if (!tag.tagName || tag.selfClosing || this.voidElements.hasOwnProperty(tag.tagName.toLowerCase())) return "";
        if (this._findEndTagInLine(session, row, tag.tagName, tag.end.column)) return "";
        return "start";
      };

      this.getCommentFoldWidget = function (session, row) {
        if (/comment/.test(session.getState(row)) && /<!-/.test(session.getLine(row))) return "start";
        return "";
      };

      this._getFirstTagInLine = function (session, row) {
        var tokens = session.getTokens(row);
        var tag = new Tag();

        for (var i = 0; i < tokens.length; i++) {
          var token = tokens[i];

          if (is(token, "tag-open")) {
            tag.end.column = tag.start.column + token.value.length;
            tag.closing = is(token, "end-tag-open");
            token = tokens[++i];
            if (!token) return null;
            tag.tagName = token.value;
            tag.end.column += token.value.length;

            for (i++; i < tokens.length; i++) {
              token = tokens[i];
              tag.end.column += token.value.length;

              if (is(token, "tag-close")) {
                tag.selfClosing = token.value == "/>";
                break;
              }
            }

            token.type.replace(/\bnested(\d+)/, function (m, g1) {
              tag.nestingLevel = Number(g1);
            });
            return tag;
          } else if (is(token, "tag-close")) {
            tag.selfClosing = token.value == "/>";
            token.type.replace(/\bnested(\d+)/, function (m, g1) {
              tag.nestingLevel = Number(g1);
            });
            return tag;
          }

          tag.start.column += token.value.length;
        }

        return null;
      };

      this._findEndTagInLine = function (session, row, tagName, startColumn) {
        var tokens = session.getTokens(row);
        var column = 0;

        for (var i = 0; i < tokens.length; i++) {
          var token = tokens[i];
          column += token.value.length;
          if (column < startColumn) continue;

          if (is(token, "end-tag-open")) {
            token = tokens[i + 1];
            if (token && token.value == tagName) return true;
          }
        }

        return false;
      };

      this._readTagForward = function (iterator, nestingLevel) {
        var token = iterator.getCurrentToken();
        if (!token) return null;
        var tag = new Tag();

        do {
          // skip tags that are nested in an attribute
          var tokenNestingLevel = undefined;
          token.type.replace(/\bnested(\d+)/, function (m, g1) {
            tokenNestingLevel = Number(g1);
          });
          if (tokenNestingLevel !== nestingLevel) continue;

          if (is(token, "tag-open")) {
            tag.closing = is(token, "end-tag-open");
            tag.start.row = iterator.getCurrentTokenRow();
            tag.start.column = iterator.getCurrentTokenColumn();
            token.type.replace(/\bnested(\d+)/, function (m, g1) {
              tag.nestingLevel = Number(g1);
            });
          } else if (is(token, "tag-name")) {
            tag.tagName = token.value;
            token.type.replace(/\bnested(\d+)/, function (m, g1) {
              tag.nestingLevel = Number(g1);
            });
          } else if (is(token, "tag-close")) {
            tag.selfClosing = token.value == "/>";
            tag.end.row = iterator.getCurrentTokenRow();
            tag.end.column = iterator.getCurrentTokenColumn() + token.value.length;
            token.type.replace(/\bnested(\d+)/, function (m, g1) {
              tag.nestingLevel = Number(g1);
            });
            iterator.stepForward();
            return tag;
          }
        } while (token = iterator.stepForward());

        return null;
      };

      this._readTagBackward = function (iterator, nestingLevel) {
        var token = iterator.getCurrentToken();
        if (!token) return null;
        var tag = new Tag();

        do {
          // skip tags that are nested in an attribute
          var tokenNestingLevel = undefined;
          token.type.replace(/\bnested(\d+)/, function (m, g1) {
            tokenNestingLevel = Number(g1);
          });
          if (tokenNestingLevel !== nestingLevel) continue;

          if (is(token, "tag-open")) {
            tag.closing = is(token, "end-tag-open");
            tag.start.row = iterator.getCurrentTokenRow();
            tag.start.column = iterator.getCurrentTokenColumn();
            token.type.replace(/\bnested(\d+)/, function (m, g1) {
              tag.nestingLevel = Number(g1);
            });
            iterator.stepBackward();
            return tag;
          } else if (is(token, "tag-name")) {
            tag.tagName = token.value;
            token.type.replace(/\bnested(\d+)/, function (m, g1) {
              tag.nestingLevel = Number(g1);
            });
          } else if (is(token, "tag-close")) {
            tag.selfClosing = token.value == "/>";
            tag.end.row = iterator.getCurrentTokenRow();
            tag.end.column = iterator.getCurrentTokenColumn() + token.value.length;
            token.type.replace(/\bnested(\d+)/, function (m, g1) {
              tag.nestingLevel = Number(g1);
            });
          }
        } while (token = iterator.stepBackward());

        return null;
      };

      this._pop = function (stack, tag) {
        while (stack.length) {
          var top = stack[stack.length - 1];

          if (!tag || top.tagName == tag.tagName) {
            return stack.pop();
          } else if (this.optionalEndTags.hasOwnProperty(top.tagName)) {
            stack.pop();
            continue;
          } else {
            return null;
          }
        }
      };

      this.getFoldWidgetRange = function (session, foldStyle, row) {
        var firstTag = this._getFirstTagInLine(session, row);

        if (!firstTag) {
          return this.getCommentFoldWidget(session, row) && session.getCommentFoldRange(row, session.getLine(row).length);
        }

        var isBackward = firstTag.closing || firstTag.selfClosing;
        var nestingLevel = firstTag.nestingLevel;
        var stack = [];
        var tag;

        if (!isBackward) {
          var iterator = new TokenIterator(session, row, firstTag.start.column);
          var start = {
            row: row,
            column: firstTag.start.column + firstTag.tagName.length + 2
          };
          if (firstTag.start.row == firstTag.end.row) start.column = firstTag.end.column;

          while (tag = this._readTagForward(iterator, nestingLevel)) {
            if (tag.nestingLevel !== nestingLevel) {
              if (!tag.selfClosing) stack.push(tag);
            } else {
              if (tag.selfClosing) {
                if (!stack.length) {
                  tag.start.column += (tag.tagName || firstTag.tagName).length + 2;
                  tag.end.column -= 2;
                  return Range.fromPoints(tag.start, tag.end);
                } else continue;
              }

              if (tag.closing) {
                this._pop(stack, tag);

                if (stack.length == 0) return Range.fromPoints(start, tag.start);
              } else {
                stack.push(tag);
              }
            }
          }
        } else {
          var iterator = new TokenIterator(session, row, firstTag.end.column);
          var end = {
            row: row,
            column: firstTag.start.column
          };

          while (tag = this._readTagBackward(iterator, nestingLevel)) {
            if (tag.nestingLevel !== nestingLevel) {
              if (!tag.selfClosing) stack.push(tag);
            } else {
              if (tag.selfClosing) {
                if (!stack.length) {
                  tag.start.column += (tag.tagName || firstTag.tagName).length + 2;
                  tag.end.column -= 2;
                  return Range.fromPoints(tag.start, tag.end);
                } else continue;
              }

              if (!tag.closing) {
                this._pop(stack, tag);

                if (stack.length == 0) {
                  tag.start.column += tag.tagName.length + 2;
                  if (tag.start.row == tag.end.row && tag.start.column < tag.end.column) tag.start.column = tag.end.column;
                  return Range.fromPoints(tag.start, end);
                }
              } else {
                stack.push(tag);
              }
            }
          }
        }
      };
    }).call(FoldMode.prototype);
  });
  ace.define("ace/mode/uu5", ["require", "exports", "module", "ace/lib/oop", "ace/lib/lang", "ace/mode/text", "ace/mode/uu5_highlight_rules", "ace/mode/behaviour/uu5", "ace/mode/folding/uu5", "ace/worker/worker_client"], function (require, exports, module) {
    "use strict";

    var oop = require("../lib/oop");

    var lang = require("../lib/lang");

    var TextMode = require("./text").Mode;

    var Uu5HighlightRules = require("./uu5_highlight_rules").Uu5HighlightRules;

    var XmlBehaviour = require("./behaviour/uu5").XmlBehaviour;

    var XmlFoldMode = require("./folding/uu5").FoldMode;

    var WorkerClient = require("../worker/worker_client").WorkerClient;

    var uu5Entities; // NOTE Added.

    var Mode = function Mode() {
      var _this = this;

      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.HighlightRules = Uu5HighlightRules;
      this.Uu5NamespaceCompleter = Uu5NamespaceCompleter;
      this.$behaviour = new XmlBehaviour();
      this.foldingRules = new XmlFoldMode();
      this.editor = options.editor;
      this.highlightAttrsSyntax = options.highlightAttrsSyntax;
      this.useCompleters = options.useCompleters;
      this.$highlightRuleConfig = {
        highlightAttrsSyntax: this.highlightAttrsSyntax
      };

      if (this.useCompleters) {
        this.editor.on("changeMode", function (e) {
          require(["ace/ext/language_tools"], function (languageTools) {
            var isActivation = _this.editor.session.getMode() === _this;

            if (_this.editor.completers) {
              _this.editor.completers = _toConsumableArray(_this.editor.completers);

              var index = _this.editor.completers.indexOf(_this.Uu5NamespaceCompleter);

              if (index !== -1 && isActivation) return; // completer is already present

              if (index !== -1 && !isActivation) _this.editor.completers.splice(index, 1);
              if (isActivation) _this.editor.completers.push(_this.Uu5NamespaceCompleter); // NOTE Cannot call 'languageTools.addCompleter()' because that bleeds out to other instances of editors.
            }
          });
        });
        this.editor.on("__uu_editorCompletersInit", function (e) {
          var index = _this.editor.completers.indexOf(_this.Uu5NamespaceCompleter);

          if (index === -1) _this.editor.completers.push(_this.Uu5NamespaceCompleter);
        });
      }
    };

    var Uu5NamespaceCompleter = {
      identifierRegexps: [/[</.a-zA-Z_0-9$](?!<)/],
      getCompletions: function getCompletions(editor, session, pos, prefix, callback) {
        var namespace = (prefix.match(/<\/?([a-zA-Z0-9_.$]*)$/) || [])[1];
        var result = null;

        if (namespace != null) {
          var namespaceParts = namespace.split(".");
          var lastPart = namespaceParts.pop();
          var obj = window;

          for (var i = 0; obj && i < namespaceParts.length; ++i) {
            obj = obj[namespaceParts[i]];
          }

          var availableKeys = obj ? Object.keys(obj) : [];

          if (obj === window) {
            // guess root namespaces of uu5 components (assume that namespace starts with uppercase char
            // and it's an object containing at least 1 key which also starts with uppercase char)
            availableKeys = availableKeys.filter(function (k) {
              return k.length && k.charAt(0).match(/[A-Z]/) && obj[k] && _typeof(obj[k]) === "object" && Object.keys(obj[k]).some(function (k2) {
                return k2.length && k2.charAt(0).match(/[A-Z]/);
              });
            });
          } else if (!lastPart) {
            availableKeys = availableKeys.filter(function (k) {
              return k.length && k.charAt(0).match(/[A-Z]/) && obj[k] != null;
            });
          }

          var lastPartLowerCase = lastPart.toLowerCase();
          var items = availableKeys.filter(function (k) {
            return k.toLowerCase().startsWith(lastPartLowerCase);
          });
          items.sort(); // @value string used for filtering
          // @caption optional, allows to display a caption different from value; e.g. "!!customCompletion!!"
          // @snippet optional, snippet that can be inseted instead of value; e.g. "${2}insert${1:This}${2}Instead$0"
          // @meta short description
          // @score score (the higher the sooner it'll be in the list)

          var namespacePrefix = prefix.replace(/[^</.]*$/, "");
          result = items.map(function (name) {
            return {
              className: " ",
              // prevent usage of Ace's className because highlighting doesn't work correctly if caption != value
              caption: name,
              value: namespacePrefix + name,
              meta: namespaceParts.length > 1 ? "uu5 component" : "namespace",
              score: 100
            };
          });
        }

        callback(null, result);
      }
    };
    oop.inherits(Mode, TextMode);
    (function () {
      this.voidElements = lang.arrayToMap([]);
      this.blockComment = {
        start: "<!--",
        end: "-->"
      };

      this.createWorker = function (session) {
        var worker = new WorkerClient(["ace"], "ace/mode/uu5_worker", "Worker", UU5_WORKER_URL); // NOTE Added URL.

        worker.attachToDocument(session.getDocument()); // NOTE Added.
        // send recognized HTML entities

        if (!uu5Entities) {
          var uu5AllEntities = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Environment.textEntityMap._htmlEntityMap.items;
          var uu5EntityFilteredKeys = Object.keys(uu5AllEntities).filter(function (it) {
            return !it.match(/^&#/);
          });
          uu5Entities = {};

          for (var i = 0, len = uu5EntityFilteredKeys.length; i < len; ++i) {
            var key = uu5EntityFilteredKeys[i];
            uu5Entities[key.substr(1, key.length - 2)] = uu5AllEntities[key];
          }
        }

        worker.call("setOptions", [{
          context: {
            htmlEntities: uu5Entities
          }
        }]);
        worker.on("error", function (e) {
          session.setAnnotations(e.data);
        });
        worker.on("terminate", function () {
          session.clearAnnotations();
        }); // make gutter clickable so that we navigate to the column where the issue is

        var prevIssuesCleanupFns = [];
        var issueClass = "ace_uu5_issue_" + Math.floor(Date.now() + 1e6 * Math.random()).toString(36); // unique per instance because we lookup gutter element using this class

        var clickHandlerCleanupFns = [];
        worker.on("error", function (e) {
          prevIssuesCleanupFns.forEach(function (fn) {
            return fn();
          });
          prevIssuesCleanupFns = [];
          e.data.forEach(function (issue) {
            var cls = issueClass + " ace_uu5_rc-" + issue.row + "-" + issue.column;
            session.addGutterDecoration(issue.row, cls);
            prevIssuesCleanupFns.push(function () {
              return session.removeGutterDecoration(issue.row, cls);
            });
          });
        });
        var prevGutterEl;
        this.editor.renderer.on("afterRender", function () {
          var issueEl = document.querySelector("." + issueClass);
          var gutterEl = issueEl ? issueEl.parentNode : null;
          if (gutterEl && gutterEl !== prevGutterEl) handleGutterClicks(issueEl.parentNode);
          prevGutterEl = gutterEl;
        });
        worker.on("terminate", function () {
          prevIssuesCleanupFns.forEach(function (fn) {
            return fn();
          });
          prevIssuesCleanupFns = [];
          clickHandlerCleanupFns.forEach(function (fn) {
            return fn();
          });
          clickHandlerCleanupFns = [];
        });
        var that = this; // shouldn't be needed due to arrow fns but it is (looks like babel issue)...

        var handleGutterClicks = function handleGutterClicks(gutterLayer) {
          clickHandlerCleanupFns.forEach(function (fn) {
            return fn();
          });
          clickHandlerCleanupFns = [];

          var mousedownHandler = function mousedownHandler(e) {
            if (e.target.classList.contains(issueClass)) e.stopPropagation();
          };

          var clickHandler = function clickHandler(e) {
            if (e.target.classList.contains(issueClass)) {
              var _iterator = _createForOfIteratorHelper(e.target.classList),
                  _step;

              try {
                for (_iterator.s(); !(_step = _iterator.n()).done;) {
                  var cls = _step.value;

                  if (cls.startsWith("ace_uu5_rc-")) {
                    var _cls$split = cls.split(/-/),
                        _cls$split2 = _slicedToArray(_cls$split, 3),
                        _ = _cls$split2[0],
                        row = _cls$split2[1],
                        column = _cls$split2[2];

                    that.editor.gotoLine(Number(row) + 1, Number(column));
                    that.editor.focus();
                    that.editor.renderer.scrollCursorIntoView(null, 0.5);
                    e.stopPropagation();
                    return;
                  }
                }
              } catch (err) {
                _iterator.e(err);
              } finally {
                _iterator.f();
              }
            }
          };

          gutterLayer.addEventListener("mousedown", mousedownHandler);
          gutterLayer.addEventListener("click", clickHandler);
          return function () {
            gutterLayer.removeEventListener("mousedown", mousedownHandler);
            gutterLayer.removeEventListener("click", clickHandler);
          };
        };

        return worker;
      };

      this.$id = "ace/mode/uu5";
    }).call(Mode.prototype);
    exports.Mode = Mode;
  });
  ace.define("ace/snippets/uu5", [], function () {
    return {
      scope: "uu5",
      // which mode these snippets are for
      snippetText: __webpack_require__(26).default.replace(/^ {2}/gm, "\t")
    };
  });
}

/***/ }),
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "load", function() { return load; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeUrl", function() { return normalizeUrl; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var module__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(module__WEBPACK_IMPORTED_MODULE_1__);


var loadCache = {};
var scriptUri = ((module__WEBPACK_IMPORTED_MODULE_1___default.a ? module__WEBPACK_IMPORTED_MODULE_1___default.a.uri : (document.currentScript || Array.prototype.slice.call(document.getElementsByTagName("script"), -1)[0] || {}).src) || "").toString();
var libBaseUri = scriptUri ? scriptUri.replace(/^(.*\/).*/, "$1") : "./";
function load(urlPath, callback) {
  var urlPathNormalized = normalizeUrl(urlPath);

  var loadData = _load(urlPathNormalized);

  if (loadData.loaded) callback(loadData.result, loadData.error);else loadData.promise.then(function (result) {
    return callback(result);
  }, function (error) {
    return callback(null, error);
  });
} // /**
//  * Wrapper which loads given URL when this component is instantiated, during load
//  * LoadingComponent is rendered, after load it takes export named componentName from
//  * loaded file and re-renders itself (passes all props to that component).
//  *
//  * Example:
//  * const LazyLoadedComponent = OnDemandReactComponent("./path.js", "JsonEditor", UU5.Bricks.Loading);
//  * const MyComponent = UU5.Common.VisualComponent.create({
//  *   ...
//  *   render() {
//  *     return <LazyLoadedComponent value="123" />; // will start loading during 1st render
//  *   }
//  * });
//  */
// export function OnDemandReactComponent(urlPath, componentName, LoadingComponent) {
//   let urlPathNormalized;
//   function getStateFromLoadResult(result) {
//     if (result && !result[componentName]) console.error(`There's no component ${componentName} exported from ${urlPathNormalized}. Exports:`, result);
//     return {
//       componentClass: result && result[componentName]
//     };
//   }
//   return class OnDemandComponent extends React.Component {
//     constructor() {
//       super();
//       if (!urlPathNormalized) urlPathNormalized = normalizeUrl(urlPath);
//       let loadData = _load(urlPathNormalized);
//       if (!loadData.loaded) loadData.promise.then(result => {
//         if (this._mounted && result) this.setState(getStateFromLoadResult(result));
//       });
//       this.state = getStateFromLoadResult(loadData.result);
//     }
//     componentDidMount() {
//       this._mounted = true;
//     }
//     componentWillUnmount() {
//       this._mounted = false;
//     }
//     render() {
//       let Component = this.state.componentClass;
//       return Component ? <Component {...this.props} /> : <LoadingComponent />;
//     }
//   };
// }

function _load(url) {
  var cacheData = loadCache[url];

  if (!cacheData) {
    cacheData = {
      loaded: false,
      result: undefined
    };
    cacheData.promise = SystemJS.import(url).then(function (result) {
      cacheData.loaded = true;
      cacheData.result = result;
      return cacheData.result;
    }, function (error) {
      console.error("Error loading " + url, error);
      cacheData.loaded = true;
      cacheData.error = error;
      return Promise.reject(error);
    });
    loadCache[url] = cacheData;
  }

  return cacheData;
}

function normalizeUrl(url) {
  var link = document.createElement("a");
  link.href = libBaseUri;
  if (url.match(/^\./)) link.href += url;else if (url.match(/^\//)) link.href = link.protocol + "//" + link.hostname + url;else link.href = url;
  return link.href; // browser re-normalizes it
}

/***/ }),
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return defineHighlighter; });
/* harmony import */ var _highlighter_less__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(20);
/* harmony import */ var _highlighter_less__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_highlighter_less__WEBPACK_IMPORTED_MODULE_0__);
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _templateObject10() {
  var data = _taggedTemplateLiteral(["\\\"(?= *<uu5string */>| *<uu5json */>)"], ["\\\\\"(?= *<uu5string */>| *<uu5json */>)"]);

  _templateObject10 = function _templateObject10() {
    return data;
  };

  return data;
}

function _templateObject9() {
  var data = _taggedTemplateLiteral(["\"(?= *<uu5string */>| *<uu5json */>)"]);

  _templateObject9 = function _templateObject9() {
    return data;
  };

  return data;
}

function _templateObject8() {
  var data = _taggedTemplateLiteral(["[^\\'\"<>=/]+"], ["[^\\\\'\"<>=/]+"]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = _taggedTemplateLiteral(["(?:\\(?:\\|\"))"], ["(?:\\\\(?:\\\\|\"))"]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteral(["[^\\'\"<>=/]+"], ["[^\\\\'\"<>=/]+"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["(?:\\(?:\\|'))"], ["(?:\\\\(?:\\\\|'))"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["(?:[^\\\"&]|\\[\"\\])+|&(?:[^\\\"&]|\\[\"\\])*"], ["(?:[^\\\\\"&]|\\\\[\"\\\\])+|&(?:[^\\\\\"&]|\\\\[\"\\\\])*"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["(?:[^\\'&]|\\['\\])+|&(?:[^\\'&]|\\['\\])*"], ["(?:[^\\\\'&]|\\\\['\\\\])+|&(?:[^\\\\'&]|\\\\['\\\\])*"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["[-w]+"], ["[-\\w]+"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["[-w.]+"], ["[-\\w.]+"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }


function defineHighlighter(ace) {
  ace.define("ace/mode/uu5_highlight_rules", ["require", "exports", "module", "ace/lib/oop", "ace/mode/text_highlight_rules"], function (require, exports, module) {
    "use strict";

    var oop = require("../lib/oop");

    var TextHighlightRules = require("./text_highlight_rules").TextHighlightRules;

    var COMPONENT_NAME = String.raw(_templateObject());
    var ATTR_NAME = String.raw(_templateObject2());

    var Uu5HighlightRules = function Uu5HighlightRules() {
      var _this = this;

      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          highlightAttrsSyntax = _ref.highlightAttrsSyntax;

      this.$rules = {
        start: [{
          include: "tag"
        }, {
          token: "text.end-tag-open.xml",
          regex: "</"
        }, {
          token: "text.tag-open.xml",
          regex: "<"
        }, {
          include: "reference"
        }, {
          defaultToken: "text.xml"
        }],
        reference: [{
          token: "constant.language.escape.reference.xml",
          regex: "(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\.-]+;)"
        }],
        entity_reference_in_attr: [{
          token: "constant.language.escape.reference.attribute-value.xml",
          regex: "(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\.-]+;)"
        }],
        tag: [{
          token: ["meta.tag.punctuation.tag-open.xml", "meta.tag.punctuation.end-tag-open.xml", "meta.tag.tag-name.xml"],
          regex: "(?:(<)|(</))(" + COMPONENT_NAME + ")",
          push: [{
            include: "attributes"
          }, {
            token: "meta.tag.punctuation.tag-close.xml",
            regex: "/?>",
            next: "pop"
          }]
        }],
        tag_whitespace: [{
          token: "text.tag-whitespace.xml",
          regex: "\\s+"
        }],
        whitespace: [{
          token: "text.whitespace.xml",
          regex: "\\s+"
        }],
        attributes: [{
          token: "entity.other.attribute-name.xml",
          regex: ATTR_NAME
        }, {
          token: "keyword.operator.attribute-equals.xml",
          regex: "="
        }, {
          include: "tag_whitespace"
        }, {
          include: "attribute_value"
        }],
        attribute_value: [{
          token: "string.attribute-value.xml",
          regex: "'",
          push: [{
            token: "string.attribute-value.xml",
            regex: "'",
            next: "pop"
          }, {
            include: "entity_reference_in_attr"
          }, {
            token: "string.attribute-value.xml",
            regex: String.raw(_templateObject3())
          }, {
            defaultToken: "string.attribute-value.xml"
          }]
        }, {
          token: "string.attribute-value.xml",
          regex: '"',
          push: [{
            token: "string.attribute-value.xml",
            regex: '"',
            next: "pop"
          }, {
            include: "entity_reference_in_attr"
          }, {
            token: "string.attribute-value.xml",
            regex: String.raw(_templateObject4())
          }, {
            defaultToken: "string.attribute-value.xml"
          }]
        }]
      };
      this.$rules.attribute_value.unshift({
        token: "string.attribute-value.xml",
        regex: "'(?= *<uu5json */>)",
        push: [{
          token: "string.attribute-value.xml",
          regex: "'",
          next: "pop"
        }, {
          include: "nested_uu5_in_json_in_apos"
        }, {
          include: "na_in_apos_attribute"
        }, {
          include: "na_start"
        }]
      }, {
        token: "string.attribute-value.xml",
        regex: "'(?= *<(?:uu5string|uu5data) */>)",
        push: [{
          token: "string.attribute-value.xml",
          regex: "'",
          next: "pop"
        }, {
          include: "na_in_apos_attribute"
        }, {
          include: "na_start"
        }]
      }, {
        token: "string.attribute-value.xml",
        regex: '"(?= *<uu5json */>)',
        push: [{
          token: "string.attribute-value.xml",
          regex: '"',
          next: "pop"
        }, {
          include: "nested_uu5_in_json_in_quot"
        }, {
          include: "nq_in_quot_attribute"
        }, {
          include: "nq_start"
        }]
      }, {
        token: "string.attribute-value.xml",
        regex: '"(?= *<(?:uu5string|uu5data) */>)',
        push: [{
          token: "string.attribute-value.xml",
          regex: '"',
          next: "pop"
        }, {
          include: "nq_in_quot_attribute"
        }, {
          include: "nq_start"
        }]
      });
      Object.assign(this.$rules, {
        in_apos_attribute: [],
        in_quot_attribute: [],
        na_in_apos_attribute: [{
          token: "string.attribute-value.xml.nested0",
          regex: String.raw(_templateObject5())
        }, {
          token: "string.attribute-value.xml.nested0",
          regex: String.raw(_templateObject6())
        }],
        nq_in_quot_attribute: [{
          token: "string.attribute-value.xml.nested0",
          regex: String.raw(_templateObject7())
        }, {
          token: "string.attribute-value.xml.nested0",
          regex: String.raw(_templateObject8())
        }],
        nested_uu5_in_json_in_apos: [{
          token: "string.attribute-value.xml.nested0",
          regex: String.raw(_templateObject9()),
          push: [{
            token: "string.attribute-value.xml.nested0",
            regex: '"',
            next: "pop"
          }, {
            include: "nq_na_in_apos_attribute"
          }, {
            include: "nq_na_start"
          }]
        }],
        nested_uu5_in_json_in_quot: [{
          token: "string.attribute-value.xml.nested0",
          regex: String.raw(_templateObject10()),
          push: [{
            token: "string.attribute-value.xml.nested0",
            regex: '\\\\"',
            next: "pop"
          }, {
            include: "nq_nq_in_quot_attribute"
          }, {
            include: "nq_nq_start"
          }]
        }]
      });

      var generateNestedRules = function generateNestedRules(states, char, prefix, depth) {
        var nestedStates = {};

        for (var k in states) {
          var stateRules = states[k];
          if (_this.$rules[prefix + k]) nestedStates[prefix + k] = _this.$rules[prefix + k];else nestedStates[prefix + k] = stateRules.map(function (it) {
            var processRule = function processRule(rule) {
              var result = _objectSpread({}, rule);

              if (result.include) result.include = prefix + result.include;
              if (result.regex) result.regex = result.regex.replace(new RegExp("(\\\\\\\\|" + char + ")", "g"), "\\\\$1");

              if (result.next) {
                if (typeof result.next === "string" && result.next !== "pop") result.next = prefix + result.next;else if (Array.isArray(result.next)) result.next = result.next.map(function (result) {
                  return processRule(result);
                });
              }

              if (result.push) {
                if (typeof result.push === "string") result.push = prefix + result.push;else result.push = result.push.map(function (result) {
                  return processRule(result);
                });
              }

              if (typeof result.token === "string") result.token += ".nested" + depth;else if (Array.isArray(result.token)) result.token = result.token.map(function (it) {
                return it + ".nested" + depth;
              });
              if (typeof result.defaultToken === "string") result.defaultToken += ".nested" + depth;
              return result;
            };

            return processRule(it);
          });
        }

        Object.assign(_this.$rules, nestedStates);
        return nestedStates;
      }; // recognize uu5string-s nesting to at most MAX_DEPTH depth; if deeper than that then it will not have proper background / style


      var MAX_DEPTH = 5;

      var gen = function gen(states, char, prefix, depth) {
        var nestedStates = generateNestedRules(states, char, prefix, depth);

        if (depth < MAX_DEPTH) {
          gen(nestedStates, "'", "na_", depth + 1);
          gen(nestedStates, '"', "nq_", depth + 1);
        }
      };

      var origStates = _objectSpread({}, this.$rules);

      for (var k in origStates) {
        if (k.match(/^na|^nq/)) delete origStates[k];
      }

      gen(origStates, "'", "na_", 0);
      gen(origStates, '"', "nq_", 0);
      if (this.constructor === Uu5HighlightRules) this.normalizeRules();
    };

    oop.inherits(Uu5HighlightRules, TextHighlightRules);
    exports.Uu5HighlightRules = Uu5HighlightRules;
  });
}

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(21);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(23)();
};

var update = __webpack_require__(24)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(22)(false);
// Module
exports.push([module.i, ".uu5-codekit-ace-editor-highlight-attrs-syntax .ace_nested0 {\n  background-color: rgba(0, 0, 120, 0.1);\n}\n.uu5-codekit-ace-editor-highlight-attrs-syntax .ace_nested1 {\n  background-color: rgba(0, 120, 0, 0.15);\n}\n.uu5-codekit-ace-editor-highlight-attrs-syntax .ace_nested2 {\n  background-color: rgba(200, 120, 0, 0.15);\n}\n.uu5-codekit-ace-editor-highlight-attrs-syntax .ace_nested3 {\n  background-color: rgba(120, 0, 120, 0.2);\n}\n.uu5-codekit-ace-editor-highlight-attrs-syntax .ace_nested4 {\n  background-color: rgba(0, 120, 0, 0.1);\n}\n.uu5-codekit-ace-editor:not(.uu5-codekit-ace-editor-highlight-attrs-syntax) .ace_nested0.ace_nested0.ace_nested0 {\n  color: #1A1AA6;\n}\n", ""]);



/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return '@media ' + item[2] + '{' + content + '}';
      } else {
        return content;
      }
    }).join('');
  }; // import a list of modules into the list


  list.i = function (modules, mediaQuery) {
    if (typeof modules === 'string') {
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    for (var i = 0; i < this.length; i++) {
      var id = this[i][0];

      if (id != null) {
        alreadyImportedModules[id] = true;
      }
    }

    for (i = 0; i < modules.length; i++) {
      var item = modules[i]; // skip already imported module
      // this implementation is not 100% perfect for weird media query combinations
      // when a module is imported multiple times with different media queries.
      // I hope this will never occur (Hey this way we have smaller bundles)

      if (item[0] == null || !alreadyImportedModules[item[0]]) {
        if (mediaQuery && !item[2]) {
          item[2] = mediaQuery;
        } else if (mediaQuery) {
          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';
        }

        list.push(item);
      }
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || '';
  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;
  return '/*# ' + data + ' */';
}

/***/ }),
/* 23 */
/***/ (function(module, exports) {

function insert(styleEl) {
  var insertionEl = document.head || document.body;
  styleEl.setAttribute("data-owner", "uu5codekitg01/uu5codekitg01@1.8.3");
  styleEl.setAttribute("data-emotion", "uu-codekit");
  styleEl.setAttribute("data-tech", "less"); // insert the style element
  // 1. after last matching data-emotion using technology "less"

  var els = insertionEl.querySelectorAll("style[data-emotion=\"uu-codekit\"]");

  for (var i = els.length - 1; i >= 0; i--) {
    var _el = els[i];

    if (_el.getAttribute("data-tech") === "less") {
      _el.parentNode.insertBefore(styleEl, _el.nextSibling);

      return;
    }
  } // 2. before first matching data-emotion using technology "emotion"


  for (var _i = 0; _i < els.length; _i++) {
    var _el2 = els[_i];

    if (_el2.getAttribute("data-tech") !== "less") {
      _el2.parentNode.insertBefore(styleEl, _el2);

      return;
    }
  } // 3. before element with data-uu-app-styles-insert-before attribute


  var el = document.querySelector("[data-uu-app-styles-insert-before]");

  if (el) {
    el.parentNode.insertBefore(styleEl, el);
    return;
  } // 4. at the end of <head> or <body>


  insertionEl.appendChild(styleEl);
}

var PSEUDO_ELEMENT = {
  appendChild: insert,
  insertBefore: insert,
  insertAfter: insert
};

module.exports = function insertInto() {
  return PSEUDO_ELEMENT;
};

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getTarget = function (target, parent) {
  if (parent){
    return parent.querySelector(target);
  }
  return document.querySelector(target);
};

var getElement = (function (fn) {
	var memo = {};

	return function(target, parent) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                        return target();
                }
                if (typeof memo[target] === "undefined") {
			var styleTarget = getTarget.call(this, target, parent);
			// Special case to return head of iframe instead of iframe itself
			if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[target] = styleTarget;
		}
		return memo[target]
	};
})();

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(25);

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
        if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertAt.before, target);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}

	if(options.attrs.nonce === undefined) {
		var nonce = getNonce();
		if (nonce) {
			options.attrs.nonce = nonce;
		}
	}

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function getNonce() {
	if (false) {}

	return __webpack_require__.nc;
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = typeof options.transform === 'function'
		 ? options.transform(obj.css) 
		 : options.transform.default(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 25 */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("# Examples: https://github.com/ajaxorg/ace/blob/master/lib/ace/snippets/html.snippets\n# Common components\nsnippet pre\n  <UU5.Bricks.Pre>\n    <uu5string.pre>${1}</uu5string.pre>\n  </UU5.Bricks.Pre>\nsnippet code\n  <UU5.Bricks.Code>${1}</UU5.Bricks.Code>\n");

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(28);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(23)();
};

var update = __webpack_require__(24)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(22)(false);
// Module
exports.push([module.i, ".uu5-codekit-ace-editor {\n  border: 1px solid #ccc;\n  border-radius: 2px;\n}\n.uu5-codekit-ace-editor.uu5-common-bg-style-underline {\n  border-width: 0 0 1px 0;\n  border-radius: 0;\n}\n.uu5-codekit-ace-editor.color-schema-red {\n  border-color: #E53935;\n}\n.uu5-codekit-ace-editor .ace_text-input-ios.ace_text-input-ios {\n  position: relative !important;\n  top: 0px !important;\n  left: 0px !important;\n}\n.uu5-codekit-ace-editor.ace-chrome .ace_gutter {\n  background-color: #f2f2f2;\n}\n.uu5-codekit-ace-editor-viewer {\n  margin-bottom: 0.5em;\n}\n.uu5-codekit-ace-editor-viewer .ace_gutter-cell.ace_warning {\n  background-image: inherit;\n}\n.uu5-codekit-ace-editor-viewer .ace_gutter-active-line {\n  background-color: rgba(0, 0, 0, 0) !important;\n}\n.uu5-codekit-ace-editor-marker {\n  position: absolute;\n}\n.uu5-codekit-ace-editor-marker-default {\n  background-color: #fff9c4;\n}\n[class^=\"ace_uu5_issue\"],\n[class*=\" ace_uu5_issue\"] {\n  cursor: pointer;\n}\n", ""]);



/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(30);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(23)();
};

var update = __webpack_require__(24)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(22)(false);
// Module
exports.push([module.i, ".uu5-codekit-code-editor:after {\n  display: block;\n  position: relative;\n  content: '';\n  clear: both;\n}\n.uu5-codekit-code-editor .uu5-forms-message {\n  margin-top: -4px;\n}\n", ""]);



/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(32);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(23)();
};

var update = __webpack_require__(24)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(22)(false);
// Module
exports.push([module.i, "", ""]);



/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _lib_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(uu5g04_bricks__WEBPACK_IMPORTED_MODULE_2__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

//@@viewOn:imports



var EditationComponent = uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Common.Component.lazy( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return SystemJS.import("uu5g04-bricks");

        case 2:
          _context.next = 4;
          return SystemJS.import("uu5g04-forms");

        case 4:
          _context.next = 6;
          return SystemJS.import("uu5g04-bricks-editable");

        case 6:
          return _context.abrupt("return", __webpack_require__.e(/* import() */ 0).then(__webpack_require__.bind(null, 54)));

        case 7:
        case "end":
          return _context.stop();
      }
    }
  }, _callee);
}))); //@@viewOff:imports

var editationLazyLoaded = false;
var Uu5String = uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Common.BaseMixin, uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Common.EditableMixin, uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Common.NestingLevelMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: _lib_js__WEBPACK_IMPORTED_MODULE_0__["default"].app + ".Uu5String",
    nestingLevelList: uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Environment.getNestingLevelList("bigBoxCollection", "inline"),
    classNames: {
      main: _lib_js__WEBPACK_IMPORTED_MODULE_0__["default"].css + "-uu5-string"
    },
    editMode: {
      name: {
        en: "Uu5String",
        cs: "Uu5String"
      },
      backgroundColor: "rgba(0,0,0,.2)",
      color: "rgba(0,0,0,.87)",
      highlightColor: "#CCCCCC"
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    uu5string: uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.PropTypes.string
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      uu5string: undefined,
      contentEditable: true
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  getInitialState: function getInitialState() {
    return {
      editationLazyLoaded: false
    };
  },
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overriding
  onBeforeForceEndEditation_: function onBeforeForceEndEditation_() {
    return this._editableComponent ? this._editableComponent.getPropsToSave() : undefined;
  },
  //@@viewOff:overriding
  //@@viewOn:private
  _registerNull: function _registerNull(inst) {
    // unmount of component means that suspense is loaded and component should be rendered
    if (!inst) {
      this.setState(function (state) {
        if (state.editationLazyLoaded) return; // Edit component is loaded - need to set to static variable because other Edit component does not render fallback component
        // editationLazyLoaded is stored in both state and static variable for cases such as when more edit modes are loaded at the same time

        editationLazyLoaded = true;
        return {
          editationLazyLoaded: true
        };
      });
    }
  },
  _isEditationLazyLoaded: function _isEditationLazyLoaded() {
    return editationLazyLoaded;
  },
  _renderEditationMode: function _renderEditationMode(isInline) {
    return uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Common.Suspense, {
      fallback: uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Common.Element.create("span", {
        ref: this._registerNull
      })
    }, uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Common.Element.create(EditationComponent, _extends({}, this.getMainPropsToPass(), {
      component: this,
      ref_: this._registerEditableComponent,
      modalEditation: !isInline
    })));
  },
  _registerEditableComponent: function _registerEditableComponent(component) {
    this._editableComponent = component;
  },
  _renderStandardContent: function _renderStandardContent() {
    var uu5string = this.props.uu5string;

    if (!uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Common.REGEXP.uu5string.test(uu5string)) {
      uu5string =  true ? uu5string : undefined;
    }

    return uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Bricks.Span, _extends({
      content: uu5string
    }, this.getMainPropsToPass()));
  },
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    var isInline = uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Environment.nestingLevelList.indexOf("box") > uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Environment.nestingLevelList.indexOf(this.getNestingLevel());
    return uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1___default.a.Common.Fragment, null, !isInline || !this.state.editation || !this._isEditationLazyLoaded() ? this._renderStandardContent() : null, this.state.editation ? this._renderEditationMode(isInline) : null);
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (Uu5String);

/***/ }),
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _lib_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);
/* harmony import */ var _code_editor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _ace_mode_uu5_uu5string_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(35);
/* harmony import */ var _uu5_string_editor_less__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(43);
/* harmony import */ var _uu5_string_editor_less__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_uu5_string_editor_less__WEBPACK_IMPORTED_MODULE_4__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }






var Uu5StringEditor = uu5g04__WEBPACK_IMPORTED_MODULE_2___default.a.Common.VisualComponent.create({
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_2___default.a.Common.BaseMixin],
  //@@viewOn:statics
  statics: {
    tagName: _lib_js__WEBPACK_IMPORTED_MODULE_0__["default"].app + ".Uu5StringEditor",
    classNames: {
      main: _lib_js__WEBPACK_IMPORTED_MODULE_0__["default"].css + "-uu5string-editor"
    },
    lsi: {
      invalidUu5String: {
        cs: "Zadaný uu5string není validní.",
        en: "Invalid uu5string.",
        sk: "Zadaný uu5string nie je validný."
      }
    },
    opt: {
      hoc: true
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    format: uu5g04__WEBPACK_IMPORTED_MODULE_2___default.a.PropTypes.oneOf(["pretty", "minified", "default"]),
    valueFormat: uu5g04__WEBPACK_IMPORTED_MODULE_2___default.a.PropTypes.oneOf(["pretty", "minified", "default"])
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      format: "default",
      valueFormat: "default"
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    var onFormat = this._getFormat();

    var valueFormat = this._getValueFormat(this.props);

    var value = typeof onFormat === "function" ? onFormat({
      value: this.props.value,
      indent: this.props.indent
    }) : this.props.value;
    return {
      value: value,
      onFormat: onFormat,
      getValueFormat: valueFormat
    };
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    var newState = {};
    var updated = false;

    if (this.props.format !== nextProps.format) {
      updated = true;
      newState.onFormat = this._getFormat(nextProps);
    }

    if (this.props.valueFormat !== nextProps.valueFormat) {
      updated = true;
      newState.getValueFormat = this._getValueFormat(nextProps);
    }

    var onFormat = newState.onFormat || this.state.onFormat;

    if (this.props.value !== nextProps.value) {
      updated = true;
      newState.value = typeof onFormat === "function" ? onFormat({
        value: nextProps.value,
        indent: nextProps.indent || this.props.indent
      }) : nextProps.value;
    }

    if (updated) {
      this.setState(newState);
    }

    return this;
  },
  //@@viewOff:standardComponentLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods
  //@@viewOn:componentSpecificHelpers
  _validateUu5String: function _validateUu5String(data) {
    var result;

    if (data.value && !this._isValidUu5StringDeep("<uu5string/>" + data.value)) {
      result = {
        feedback: "error",
        message: this.getLsiComponent("invalidUu5String"),
        value: data.value
      };
    } else {
      result = {
        feedback: "success",
        message: null,
        value: data.value
      };
    }

    return result;
  },
  _isValidUu5StringDeep: function _isValidUu5StringDeep(uu5string) {
    // TODO Use UU5.Common.UU5String.isValid when it supports deep validation.
    // Until then we'll use modified parser that is used by Ace Editor for
    // validating uu5string syntax (because it supports deep validation).
    var valid = true;
    var parser = new _ace_mode_uu5_uu5string_parser_js__WEBPACK_IMPORTED_MODULE_3__["default"]({
      entityMap: this._getSupportedHtmlEntities(),
      issueReporter: {
        error: function error(message, parsingContext) {
          valid = false;
        }
      }
    });
    parser.parse(uu5string);
    return valid;
  },
  _getSupportedHtmlEntities: function _getSupportedHtmlEntities() {
    var uu5AllEntities = uu5g04__WEBPACK_IMPORTED_MODULE_2___default.a.Environment.textEntityMap._htmlEntityMap.items;
    var uu5EntityFilteredKeys = Object.keys(uu5AllEntities).filter(function (it) {
      return !it.match(/^&#/);
    });
    var uu5HtmlEntities = {};

    for (var i = 0; i < uu5EntityFilteredKeys.length; ++i) {
      var key = uu5EntityFilteredKeys[i];
      uu5HtmlEntities[key.substr(1, key.length - 2)] = uu5AllEntities[key];
    }

    return uu5HtmlEntities;
  },
  _getFormat: function _getFormat() {
    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
    var onFormat;

    switch (props.format) {
      case "pretty":
        onFormat = this._beautify;
        break;

      case "minified":
        onFormat = this._minify;
        break;

      default:
        onFormat = null;
    }

    return onFormat;
  },
  _getValueFormat: function _getValueFormat() {
    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
    var onValueFormat;

    switch (props.valueFormat) {
      case "pretty":
        onValueFormat = this._beautify;
        break;

      case "minified":
        onValueFormat = this._minify;
        break;

      default:
        onValueFormat = null;
    }

    return onValueFormat;
  },
  _splitOnTags: function _splitOnTags(str) {
    return str.split(/(<\/?[-\w.]+(?:\s+\w+(?:\s*=\s*(?:(?:"(?:\\.|[^"])*")|(?:'(?:\\.|[^'])*')|[^>\s]+))?)*\s*\/?>)/g).filter(function (line) {
      return line.trim() !== "";
    });
  },
  _beautify: function _beautify(input) {
    if (!input.value) return input.value;
    var depth = 0;
    var indent = input.indent || 2;

    var r = this._splitOnTags(input.value);

    r = r.map(function (item) {
      item = item.trim();
      var line;
      if (item.indexOf("</") === 0 && depth > 0) depth--;
      line = repeat(" ", indent * depth) + item;
      if (item[0] === "<" && item[1] !== "/" && item[item.length - 2] !== "/" && item[item.length - 1] === ">") depth++;
      return line;
    }).join("\n");
    return r;
  },
  _minify: function _minify(input) {
    if (!input.value) return input.value;
    return this._splitOnTags(input.value).map(function (item) {
      return item.trim();
    }).join("");
  },
  //@@viewOff:componentSpecificHelpers
  //@@viewOn:render
  render: function render() {
    return uu5g04__WEBPACK_IMPORTED_MODULE_2___default.a.Common.Element.create(_code_editor_js__WEBPACK_IMPORTED_MODULE_1__["default"], _extends({
      enableBasicAutocompletion: true
    }, this.props, {
      value: this.state.value,
      codeStyle: "uu5",
      onFormat: this.state.onFormat,
      getValueFormat: this.state.getValueFormat,
      onValidate: this.props.onValidate || this._validateUu5String
    }));
  } //@@viewOff:render

});

function repeat(txt, num) {
  if (num <= 0) return "";
  if (num === 1) return txt;
  var p = repeat(txt, num >> 1);
  return p + p + (num & 1 ? txt : "");
}

/* harmony default export */ __webpack_exports__["default"] = (Uu5StringEditor);

/***/ }),
/* 35 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _tools_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(36);
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(39);
/* harmony import */ var _uu5_json_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(42);
/* harmony import */ var _uu5_data_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(41);
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }





/**
 * Parses uu5string deeply (attributes with uu5string, nested strings inside of uu5json, ...).
 * Errors / warning are reported using issueReporter class, they're not thrown. Reported
 * issues contain message, string being parsed and index where the issue occurred.
 */

var Parser = /*#__PURE__*/function () {
  function Parser() {
    var _this = this;

    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Parser);

    this.issueReporter = opts.issueReporter || {};
    this.entityMap = opts.entityMap || {};
    this._buildItem = this._buildItem.bind(this);
    this._nestedIssueReporter = {
      error: function error(message, parsingContext) {
        var _this$_reconstructOri = _this._reconstructOriginalIssueLocation(parsingContext),
            index = _this$_reconstructOri.index,
            string = _this$_reconstructOri.string;

        _this.issueReporter.error && _this.issueReporter.error(message, {
          index: index,
          string: string
        });
      },
      warning: function warning(message, parsingContext) {
        var _this$_reconstructOri2 = _this._reconstructOriginalIssueLocation(parsingContext),
            index = _this$_reconstructOri2.index,
            string = _this$_reconstructOri2.string;

        _this.issueReporter.warning && _this.issueReporter.warning(message, {
          index: index,
          string: string
        });
      }
    };
  }

  _createClass(Parser, [{
    key: "parse",
    value: function parse(uu5string) {
      var modUu5string = "<uu5string/>" + uu5string;
      var modParsingContext = {
        string: uu5string,
        index: 0,
        revertToUnparsedValueFns: [function (string) {
          return string.substr("<uu5string/>".length);
        }]
      };
      var children;

      try {
        children = _tools_js__WEBPACK_IMPORTED_MODULE_0__["default"].parseUu5String(modUu5string, this._buildItem, modParsingContext, this._nestedIssueReporter);
      } catch (e) {
        if (e.context) {
          this._nestedIssueReporter.error(e.message, e.context);

          children = e.partialResult || [];
        } else {
          throw e;
        }
      }

      return children;
    }
  }, {
    key: "_buildItem",
    value: function _buildItem(tag, propsString, children, isPairedTag, initFn, parent, parsingContext) {
      var _this2 = this;

      var result;

      if (!tag) {
        // text
        this._validateEntities(children, parsingContext);

        result = children;
      } else {
        // tag
        var attrs = {};

        var attrsParsingContext = _objectSpread({}, parsingContext, {
          index: parsingContext.index + 1 + tag.length
        });

        var buildAttr = function buildAttr(attr, parsingContext) {
          attrs[attr.name] = attr.rawValue;

          if (attr.rawValue) {
            if (attr.rawValue.match(_constants_js__WEBPACK_IMPORTED_MODULE_1__["UU5JSON_REGEXP"])) {
              // re-parse uu5json with validation of nested uu5strings in JSON.
              _this2._parseNestedStringsInUu5Json(attr.rawValue, parsingContext);
            } else if (!attr.rawValue.match(_constants_js__WEBPACK_IMPORTED_MODULE_1__["UU5STRING_REGEXP"]) && !attr.rawValue.match(_constants_js__WEBPACK_IMPORTED_MODULE_1__["UU5DATA_REGEXP"])) {
              _this2._validateEntities(attr.rawValue, parsingContext);
            }
          }

          return attr;
        };

        try {
          _tools_js__WEBPACK_IMPORTED_MODULE_0__["default"].parseUU5StringProps(propsString, this._buildItem, buildAttr, attrsParsingContext, this._nestedIssueReporter);
        } catch (e) {
          if (e.context) {
            this._nestedIssueReporter.error(e.message, e.context);
          } else {
            throw e;
          }
        }

        result = {
          tag: tag,
          attrs: attrs,
          children: children
        };
      }

      return result;
    }
  }, {
    key: "_parseNestedStringsInUu5Json",
    value: function _parseNestedStringsInUu5Json(uu5json, parentParsingContext) {
      var _this3 = this;

      _uu5_json_js__WEBPACK_IMPORTED_MODULE_2__["default"].parse(uu5json, function (attrKey, attrValue, attrValueParsingContext) {
        try {
          if (typeof attrValue !== "string") return;

          if (attrValue.match(_constants_js__WEBPACK_IMPORTED_MODULE_1__["UU5STRING_REGEXP"])) {
            var modText = attrValue.replace(/^\s+/, "");
            var modParsingContext = {
              string: modText,
              index: attrValue.length - modText.length,
              parentParsingContext: attrValueParsingContext
            };
            _tools_js__WEBPACK_IMPORTED_MODULE_0__["default"].parseUu5String(modText, _this3._buildItem, modParsingContext, _this3._nestedIssueReporter);
          } else if (attrValue.match(_constants_js__WEBPACK_IMPORTED_MODULE_1__["UU5JSON_REGEXP"])) {
            _this3._parseNestedStringsInUu5Json(attrValue, attrValueParsingContext);
          } else if (attrValue.match(_constants_js__WEBPACK_IMPORTED_MODULE_1__["UU5DATA_REGEXP"])) {
            _uu5_data_js__WEBPACK_IMPORTED_MODULE_3__["default"].parse(attrValue, attrValueParsingContext);
          }
        } catch (e) {
          if (e.context) {
            _this3._nestedIssueReporter.error(e.message, e.context);
          } else {
            // don't throw on nested uu5json-s (let the parsing continue)
            // TODO Maybe throw because parsing errors have always e.context?
            console.error(e);
          }
        }
      }, parentParsingContext);
    }
  }, {
    key: "_reconstructOriginalIssueLocation",
    value: function _reconstructOriginalIssueLocation(errorContext) {
      var rootString = errorContext.string,
          rootIndex = errorContext.index;
      var stringUptoIssue = rootString.substr(0, rootIndex || 0);
      var context = errorContext.parentParsingContext;

      while (context) {
        var _context = context,
            string = _context.string,
            index = _context.index,
            revertToUnparsedValueFns = _context.revertToUnparsedValueFns;

        if (revertToUnparsedValueFns) {
          stringUptoIssue = revertToUnparsedValueFns.reduceRight(function (result, fn) {
            return fn(result);
          }, stringUptoIssue);
        }

        stringUptoIssue = string.substr(0, index) + stringUptoIssue;
        rootString = context.string;
        context = context.parentParsingContext;
      }

      return {
        index: stringUptoIssue.length,
        string: rootString
      };
    }
  }, {
    key: "_validateEntities",
    value: function _validateEntities(text, parentParsingContext) {
      var _this4 = this;

      if (text) {
        text.replace(/&(\w+);/g, function (m, name, pos) {
          if (!(name in _this4.entityMap)) {
            _this4._nestedIssueReporter.warning("Entity ".concat(m, " at position ").concat(pos, " is not recognized."), {
              index: pos,
              string: text,
              parentParsingContext: parentParsingContext
            });
          }
        });
      }
    }
  }]);

  return Parser;
}();

/* harmony default export */ __webpack_exports__["default"] = (Parser);

/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _symbols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(39);
/* harmony import */ var _uu5_environment_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(40);
/* harmony import */ var _uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(38);
/* harmony import */ var _uu5_data_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(41);
/* harmony import */ var _uu5_json_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(42);
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







var Tools = {
  /*
    Transform content into React components.
     @param content - array of UU5StringObjects, strings, numbers, booleans and UU5StringTemplates
    @param data - map with data for UU5String templates
    @param filterFn({tag, props}) - function to change tag and props used for rendering into components. Function is called for each descendant UU5StringObject before creation of React component. This function cannot change data of UU5StringObjects.
    @returns array of React components
   */
  contentToChildren: function contentToChildren(content, data, filterFn) {
    if (!content || !content.length) {
      return null;
    }

    return content.map(function (item) {
      return typeof item === "string" ? Tools.printTemplateToChildren(_uu5_environment_js__WEBPACK_IMPORTED_MODULE_2__["default"].textEntityMap.replace(item), data) : item.toChildren(data, filterFn);
    });
  },

  /*
    Transform content into string.
     @param content - array of UU5StringObjects, strings, numbers, booleans and UU5StringTemplates
    @param data - map with data for UU5String templates
    @param filterFn({tag, props}) - function to change tag and props used for printing into string. Function is called for each descendant UU5StringObject before print into string. This function cannot change data of UU5StringObjects.
    @returns string
  */
  contentToString: function contentToString(content, data, filterFn) {
    if (!content || !content.length) {
      return "";
    }

    if (typeof content === "string") {
      return Tools.printTemplateToString(content, data);
    }

    var result = "";
    content.forEach(function (item) {
      return result += typeof item === "string" ? Tools.printTemplateToString(item, data) : item.toString(data, filterFn);
    });
    return result;
  },
  printTemplateToString: function printTemplateToString(string, data) {
    if (!data) {
      return string;
    }

    var result = Tools._printTemplate(string, data);

    return result.length === 1 ? result[0] : result.join("");
  },
  printTemplateToChildren: function printTemplateToChildren(string, data) {
    if (!data) {
      return string;
    }

    var isChildren;

    var result = Tools._printTemplate(string, data, function (matchValue) {
      if (typeof matchValue === "string" && matchValue.match(_constants__WEBPACK_IMPORTED_MODULE_1__["UU5STRING_REGEXP"]) && Tools.isValidUU5String(matchValue)) {
        isChildren = true; // create component by _Tools.findComponent

        return Tools.parseUu5String(matchValue, Tools._buildReactComponent);
      }

      return matchValue;
    }); // result contains parsed UU5String - return array


    if (isChildren) return result;
    return result.length === 1 ? result[0] : result.join("");
  },
  _buildReactComponent: function _buildReactComponent(tag, propsString, children) {
    if (!tag) return children;
    var propsArray = propsString ? Tools.parseUU5StringProps(propsString, Tools._buildReactComponent) : [];
    var props = {};
    propsArray.forEach(function (item) {
      return props[item.name] = item.value;
    });
    return _uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_3__["default"].findComponent(tag, props, children);
  },
  _printTemplate: function _printTemplate(string, data, matchHandler) {
    // check if string is single template - in this case return template result ( posible another type then string )
    // let isTemplate = string.match(CHECK_IS_TEMPLATE);
    var useMatchHandler = typeof matchHandler === "function";
    var result = [];
    var templateMatch = _constants__WEBPACK_IMPORTED_MODULE_1__["TEMPLATE_REG_EXP"].exec(string);
    var startIndex = 0;
    var endIndex = 0;
    /*
    template[1] - name
    template[2] - default value prefixed by :
    template[3] - default value
    */

    while (templateMatch) {
      var templateName = templateMatch[1];
      var value = void 0;
      endIndex = _constants__WEBPACK_IMPORTED_MODULE_1__["TEMPLATE_REG_EXP"].lastIndex - templateMatch[0].length;

      if (endIndex > startIndex) {
        result.push(string.substring(startIndex, endIndex));
      }

      startIndex = _constants__WEBPACK_IMPORTED_MODULE_1__["TEMPLATE_REG_EXP"].lastIndex;

      if (data[templateName]) {
        // check data
        var template = data[templateName];
        value = typeof template === "function" ? template() : template;
      } else if (_symbols__WEBPACK_IMPORTED_MODULE_0__["default"][templateName]) {
        // check symbols
        var _template = _symbols__WEBPACK_IMPORTED_MODULE_0__["default"][templateName];
        value = typeof _template === "function" ? _template() : _template;
      } else {
        // replace template by default value or empty string
        value = templateMatch[3] === undefined ? templateMatch[0] : templateMatch[3];
      }

      if (useMatchHandler) {
        var matchResult = matchHandler(value);

        if (Array.isArray(matchResult)) {
          matchResult.forEach(function (item) {
            return result.push(item);
          });
        } else {
          result.push(matchResult);
        }
      } else {
        result.push(value);
      }

      templateMatch = _constants__WEBPACK_IMPORTED_MODULE_1__["TEMPLATE_REG_EXP"].exec(string);
    } // add string after end of last match


    if (startIndex < string.length) {
      result.push(string.substring(startIndex));
    }

    return result;
  },
  isValidUU5String: function isValidUU5String(uu5string) {
    if (typeof uu5string !== "string") return false;

    try {
      Tools.parseUu5String(uu5string);
      return true;
    } catch (e) {
      return false;
    }
  },
  parseUu5String: function parseUu5String(uu5string, buildItem) {
    var parentParsingContext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
    var issueReporter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

    if (!uu5string || typeof uu5string !== "string" || uu5string.length === 0) {
      return [];
    }

    uu5string = uu5string.trim().replace(/\r\n/g, "\n");
    var tagsRegExp = _uu5_environment_js__WEBPACK_IMPORTED_MODULE_2__["default"].uu5StringTagsRegExp || null;
    var childStack = [{
      tag: "_root",
      children: [],
      index: 0
    }];
    var pointer = childStack[0];
    var cIndex = -1;
    var pIndex = 0;
    var pre = false;
    var parsingContext = {
      index: pIndex,
      string: uu5string,
      parentParsingContext: parentParsingContext
    };
    var matchS;
    var matchUu5String = uu5string.match(_constants__WEBPACK_IMPORTED_MODULE_1__["UU5STRING_REGEXP"]);

    if (matchUu5String) {
      // !!!!! Never put uu5stringRe to constants, otherwise it gets stuck - because of exec method on regexp
      // groups:
      //   comp name, attrs, -, -, -, -, -, -, self-closing, closing comp name
      //   invalid opening tag: comp name, partial attrs, -, -, -, -, -, -
      //   invalid closing tag: closing comp name
      var tagRe = new RegExp("".concat(_constants__WEBPACK_IMPORTED_MODULE_1__["TAG"], "|").concat(_constants__WEBPACK_IMPORTED_MODULE_1__["INVALID_OPENING_TAG"], "|").concat(_constants__WEBPACK_IMPORTED_MODULE_1__["INVALID_CLOSING_TAG"]), "g");
      pIndex = tagRe.lastIndex = matchUu5String[0].length;
      matchS = tagRe.exec(uu5string);

      var _loop = function _loop() {
        cIndex = matchS.index;

        if (cIndex > pIndex) {
          var head = uu5string.substring(pIndex, cIndex);
          var _text = head; // let text = pre ? Environment.textEntityMap.replaceHtmlEntity(head) : Environment.textEntityMap.replace(head);

          parsingContext.index = pIndex;
          pointer.children.push(typeof buildItem === "function" ? buildItem(null, null, _text, null, null, null, parsingContext) : _text);
        }

        var childTag = matchS[1] || matchS[9];
        var attrs = matchS[2];
        var isClosing = !!matchS[9];
        var isSelfClosing = !!matchS[8];
        var invalidOpeningTag = matchS[10]; // let invalidOpeningTagPartialAttrs = matchS[11];

        var invalidClosingTag = matchS[17];
        var isInvalid = !pre && (invalidOpeningTag || invalidClosingTag);
        var tagObj = void 0;

        if (pre && !(childTag === "uu5string.pre" && isClosing)) {
          var _text2 = matchS[0]; // TODO This is wrong (we could have matched something that looks like TAG which has </uu5string.pre> in its attribute - we should stop at that </uu5string.pre> whereas the current implementation will skip that and continue being in PRE).
          // let text = Environment.textEntityMap.replaceHtmlEntity(matchS[0]);

          parsingContext.index = cIndex;
          pointer.children.push(typeof buildItem === "function" ? buildItem(null, null, _text2, null, null, null, parsingContext) : _text2);
        } else if (isInvalid) {
          parsingContext.index = cIndex;

          if (issueReporter) {
            if (invalidOpeningTag) {
              issueReporter.warning("Parsing opening tag ".concat(invalidOpeningTag, " failed at position ").concat(cIndex + matchS[0].length, " - expected attribute or closing bracket."), _objectSpread({}, parsingContext, {
                index: cIndex + matchS[0].length
              }));
            } else if (invalidClosingTag) {
              issueReporter.warning("Parsing closing tag ".concat(invalidClosingTag, " failed at position ").concat(cIndex + matchS[0].length, " - expected closing bracket."), _objectSpread({}, parsingContext, {
                index: cIndex + matchS[0].length
              }));
            }
          }

          var _text3 = matchS[0].substr(0, 2); // use only first few characters from match and re-parse to be backward compatible (which is also why we handle this just as a warning instead of real error)


          pointer.children.push(typeof buildItem === "function" ? buildItem(null, null, _text3, null, null, null, parsingContext) : _text3);
          pIndex = cIndex + _text3.length;
          tagRe.lastIndex = pIndex;
          matchS = tagRe.exec(uu5string);
          return "continue";
        } else {
          if (isClosing) {
            //closing tag
            tagObj = childStack.pop();

            if (tagObj.tag !== childTag) {
              var _err;

              var isOpenSooner = childStack.some(function (parentTag) {
                return parentTag.tag === childTag;
              });

              if (isOpenSooner) {
                // can be either unclosed tag or wrong closing tag
                _err = new Error("Invalid uu5string: Tag ".concat(tagObj.tag, " at position ").concat(tagObj.index, " is not closed."));
                parsingContext.tag = tagObj.tag;
                parsingContext.index = tagObj.index;
              } else {
                // more likely to be wrong closing tag (or typo in opening tag)
                _err = new Error("Invalid uu5string: Tag ".concat(childTag, " at position ").concat(cIndex, " is not open.") + (childStack.length ? " Did you mean </".concat(tagObj.tag, ">?") : ""));
                parsingContext.tag = childTag;
                parsingContext.index = cIndex;
              }

              _err.code = "uu5StringInvalid";
              _err.context = parsingContext;
              _err.partialResult = (childStack[0] || pointer).children;
              throw _err;
            }

            pointer = childStack[childStack.length - 1];

            if (pre) {
              pre = false;

              var _text4 = tagObj.children.join(""); // let text = Environment.textEntityMap.replaceHtmlEntity(tagObj.children.join(''));


              parsingContext.index = tagObj.index;
              pointer.children[pointer.children.length - 1] = typeof buildItem === "function" ? buildItem(tagObj.tag, null, _text4, null, null, null, parsingContext) : _text4;
            } else {
              if (tagObj.forbidden) {
                tagObj.children = "Error: Tag <".concat(tagObj.tag, " /> is not allowed.");
                tagObj.tag = "Error";
              }

              parsingContext.index = tagObj.index;
              pointer.children[pointer.children.length - 1] = typeof buildItem === "function" ? buildItem(tagObj.tag, tagObj.attrs, tagObj.children, true, null, null, parsingContext) : tagObj;
            }
          } else {
            pre = childTag === "uu5string.pre";
            tagObj = {
              tag: childTag,
              children: [],
              index: matchS.index
            };
            if (tagsRegExp && !tagsRegExp.test(childTag)) tagObj.forbidden = true;else if (attrs) {
              tagObj.attrs = attrs;
            }

            if (isSelfClosing) {
              //self-closing tag
              pre = false;
              parsingContext.index = cIndex;

              if (childTag.indexOf("uu5string.") === 0) {
                //meta-tag uu5string.*
                var s = Tools.execMetaTag(childTag, tagObj.attrs);
                if (s) s.forEach(function (item) {
                  return pointer.children.push(typeof buildItem === "function" ? buildItem(null, null, item, null, null, null, parsingContext) : item);
                });
              } else {
                pointer.children.push(typeof buildItem === "function" ? buildItem(tagObj.tag, tagObj.attrs, tagObj.children, false, null, null, parsingContext) : tagObj);
              }
            } else {
              //common tag
              pointer.children.push(tagObj);
              childStack.push(tagObj);
              pointer = tagObj;
            }
          }
        }

        pIndex = cIndex + matchS[0].length;
        matchS = tagRe.exec(uu5string);
      };

      while (matchS) {
        var _ret = _loop();

        if (_ret === "continue") continue;
      } // handle ending text


      if (pIndex < uu5string.length) {
        var text = uu5string.substr(pIndex); // text = pre ? Environment.textEntityMap.replaceHtmlEntity(text) : Environment.textEntityMap.replace(text);

        parsingContext.index = pIndex;
        pointer.children.push(typeof buildItem === "function" ? buildItem(null, null, text, null, null, null, parsingContext) : text);
      }

      if (childStack.length > 1) {
        var tagObj = childStack.pop();
        var err = new Error("Invalid uu5string: Tag ".concat(tagObj.tag, " at position ").concat(tagObj.index, " is not closed."));
        err.code = "uu5StringInvalid";
        parsingContext.tag = tagObj.tag;
        parsingContext.index = tagObj.index;
        err.context = parsingContext;
        err.partialResult = (childStack[0] || pointer).children;
        throw err;
      }
    } else {
      parsingContext.index = pIndex;
      pointer.children.push(typeof buildItem === "function" ? buildItem(null, null, uu5string, null, null, null, parsingContext) : uu5string);
    }

    return pointer.children;
  },
  parseUU5StringProps: function parseUU5StringProps(attrsString, buildItem, buildAttr) {
    var parentParsingContext = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
    var issueReporter = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
    var attrs = []; // group1 = separator
    // group2 = attribute name
    // group3 = name and value separator
    // group4 = attribute value
    // group5 = indication that attribute value is not wrapped into quotes / single quotes

    var attrsReg = new RegExp(_constants__WEBPACK_IMPORTED_MODULE_1__["ATTR_REGEXP"].source, "g");
    var matchAttrs = attrsReg.exec(attrsString);

    var _loop2 = function _loop2() {
      var separator = matchAttrs[1];
      var name = matchAttrs[2];
      var valueDelimiter = matchAttrs[3];
      var valueBoundaries = "";
      var value = true;
      var uu5DataKey = undefined;
      var valueType = null; // hold info if data is parsed from uu5string, uu5data or uu5json

      var matchValue = matchAttrs[4];
      var isUnquoted = !!matchAttrs[5];
      var revertToUnparsedValueFns = [];
      var matchValueIndex = matchAttrs.index + separator.length + name.length + (valueDelimiter || "").length;
      var parsingContext = {
        revertToUnparsedValueFns: revertToUnparsedValueFns,
        index: matchValueIndex,
        string: attrsString,
        parentParsingContext: parentParsingContext,
        prop: name,
        rawValue: matchValue
      };

      if (isUnquoted) {
        if (matchValue === "true") {
          //true
          value = true;
        } else if (matchValue === "false") {
          //false
          value = false;
        } else if (isFinite(matchValue)) {
          //number
          value = +matchValue;
        } else {
          //any other -> null
          value = null;
        }
      } else if (matchValue != null) {
        // unescape quoted value
        if (matchValue[0] === "'") {
          valueBoundaries = "'";
          matchValue = matchValue.substr(1, matchValue.length - 2).replace(/\\([\\'])/g, "$1");
          revertToUnparsedValueFns.push(function (input) {
            return valueBoundaries + input.replace(/(\\|')/g, "\\$1");
          });
        } else if (matchValue[0] === '"') {
          valueBoundaries = '"';
          matchValue = matchValue.substr(1, matchValue.length - 2).replace(/\\([\\"])/g, "$1");
          revertToUnparsedValueFns.push(function (input) {
            return valueBoundaries + input.replace(/(\\|")/g, "\\$1");
          });
        }

        var matchValueType = matchValue.match(_constants__WEBPACK_IMPORTED_MODULE_1__["ATTR_VALUE_TYPE_REGEXP"]);

        if (matchValueType[1]) {
          //uu5JSON
          valueType = "uu5json";
          value = _uu5_json_js__WEBPACK_IMPORTED_MODULE_5__["default"].parse(matchValue, null, parsingContext);
        } else if (matchValueType[2]) {
          //uu5String
          valueType = "uu5string";
          value = Tools.parseUu5String(matchValue, buildItem, parsingContext, issueReporter);
        } else if (matchValueType[3]) {
          //uu5Data
          valueType = "uu5data";
          var uu5DataKeyMatch = matchValue.match(_constants__WEBPACK_IMPORTED_MODULE_1__["UU5DATA_REGEXP"]);
          uu5DataKey = matchValue.replace(_constants__WEBPACK_IMPORTED_MODULE_1__["UU5DATA_REGEXP"], "");
          revertToUnparsedValueFns.push(function (input) {
            return uu5DataKeyMatch ? uu5DataKeyMatch[0] + input : input;
          });
          value = _uu5_data_js__WEBPACK_IMPORTED_MODULE_4__["default"].parse(matchValue, parsingContext);
        } else {
          //as-is
          if (name === "href") {
            var jsCodeMatch = matchValue.match(_constants__WEBPACK_IMPORTED_MODULE_1__["JSCODE_REGEXP"]);
            matchValue = matchValue.replace(_constants__WEBPACK_IMPORTED_MODULE_1__["JSCODE_REGEXP"], "");
            revertToUnparsedValueFns.push(function (input) {
              return jsCodeMatch ? jsCodeMatch[0] + input : input;
            });
          }

          value = matchValue;
        }
      }

      var attr = {
        name: name,
        value: value,
        valueDelimiter: valueDelimiter,
        separator: separator,
        valueBoundaries: valueBoundaries,
        valueType: valueType,
        uu5DataKey: uu5DataKey,
        rawValue: matchValue
      };
      if (typeof buildAttr === "function") attr = buildAttr(attr, parsingContext) || attr;
      attrs.push(attr);
      matchAttrs = attrsReg.exec(attrsString);
    };

    while (matchAttrs) {
      _loop2();
    }

    return attrs;
  },
  execMetaTag: function execMetaTag(tag, args) {
    //TODO implement each metaTag as separate function, call functions dynamically (witch safety keyword guard)
    var metaTag = tag.slice(10);
    var r = [];

    switch (metaTag) {
      case "now":
        r.push(_symbols__WEBPACK_IMPORTED_MODULE_0__["default"].now());
        break;

      case "codeHex32":
        r.push(_symbols__WEBPACK_IMPORTED_MODULE_0__["default"].idHex32());
        break;

      case "codeHex64":
        r.push(_symbols__WEBPACK_IMPORTED_MODULE_0__["default"].idHex64());
        break;

      default:
        r.push(null);
    }

    return r;
  },
  _escapeEntities: function _escapeEntities(text) {
    if (typeof text !== "string") return text; // TODO Maybe unescape emojis too.
    // NOTE Environment.textEntityMap doesn't have unescaping mechanism and it contains
    // multiple mappings to the same character, e.g. &lt; and &#060; are both mapped to ">".

    return text.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
  }
};
/* harmony default export */ __webpack_exports__["default"] = (Tools);

/***/ }),
/* 37 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38);

var SYMBOLS = {
  now: function now() {
    var date = new Date();
    return _uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_0__["default"].toLocaleString(date, _uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_0__["default"].getLanguage());
  },
  idHex32: function idHex32() {
    return _uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_0__["default"].generateUUID(32);
  },
  idHex64: function idHex64() {
    return _uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_0__["default"].generateUUID(64);
  }
};
/* harmony default export */ __webpack_exports__["default"] = (SYMBOLS);

/***/ }),
/* 38 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "REGEXP", function() { return REGEXP; });
var REGEXP = {
  uu5string: /^\s*<uu5string\s*\/>/,
  uu5stringTemplate: /\${([0-9a-zA-Z.\-_]+)\s*(:\s*([0-9a-zA-Z.\-_ ()\[\]<>\\\/]+))?}/,
  uu5json: /^\s*<uu5json\s*\/>/,
  uu5data: /^\s*<uu5data\s*\/>/,
  jsCode: /^(javascript:\s*)*/i
};
var REGEXP_XY = /[xy]/g;
var Tools = {};

Tools.getLanguage = function () {
  return "en"; // Environment.languages[0] ? Environment.languages[0].location || Environment.languages[0].language : navigator.language;
};

Tools.toLocaleString = function (date, country, opt) {
  // because of IE
  return date.toLocaleString(country, opt).replace(/\u200E/g, "");
};

Tools.error = function (msg, context) {
  // if (Environment.isProduction()) {
  //   console.error('For debugging use development mode.');
  // } else {
  console.error(msg, context);
};

Tools.generateUUID = function (length) {
  length = Math.max(length, 8);
  var uuidCore = "x4xxxyxx";
  var additionalCharLength = length - uuidCore.length;

  for (var i = 0; i < additionalCharLength; ++i) {
    if (i % 2 === 0) uuidCore = uuidCore + "x";else uuidCore = "x" + uuidCore;
  }

  var timeNum = new Date().getTime();

  if (window.performance && typeof window.performance.now === "function") {
    timeNum += performance.now(); //use high-precision timer if available
  }

  return uuidCore.replace(REGEXP_XY, function (char) {
    var r = (timeNum + Math.random() * 16) % 16 | 0;
    timeNum = Math.floor(timeNum / 16);
    return (char === "x" ? r : r & 0x3 | 0x8).toString(16);
  });
};

/* harmony default export */ __webpack_exports__["default"] = (Tools);

/***/ }),
/* 39 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UU5STRING_REGEXP", function() { return UU5STRING_REGEXP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UU5JSON_REGEXP", function() { return UU5JSON_REGEXP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UU5DATA_REGEXP", function() { return UU5DATA_REGEXP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JSCODE_REGEXP", function() { return JSCODE_REGEXP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COMPONENT_NAME", function() { return COMPONENT_NAME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ATTR", function() { return ATTR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TAG", function() { return TAG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "INVALID_OPENING_TAG", function() { return INVALID_OPENING_TAG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "INVALID_CLOSING_TAG", function() { return INVALID_CLOSING_TAG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ATTR_REGEXP", function() { return ATTR_REGEXP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ATTR_VALUE_TYPE_REGEXP", function() { return ATTR_VALUE_TYPE_REGEXP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TEMPLATE_REG_EXP", function() { return TEMPLATE_REG_EXP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CHECK_IS_TEMPLATE", function() { return CHECK_IS_TEMPLATE; });
/* harmony import */ var _uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38);
function _templateObject6() {
  var data = _taggedTemplateLiteral(["(", ")|(", ")|(", ")|"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["</(", ")"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["<(", ")((?:", ")*)"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["<(", ")((?:", ")*)s*(/)?>|</(", ")>"], ["<(", ")((?:", ")*)\\s*(/)?>|</(", ")>"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["(s+)([-w]+)(?:(s*=s*)(\"(?:\\.|[^\"\\])*\"|'(?:\\.|[^'\\])*'|([^\"'>s/][^>s/]*)))?"], ["(\\s+)([-\\w]+)(?:(\\s*=\\s*)(\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|([^\"'>\\s/][^>\\s/]*)))?"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["[-w.]+"], ["[-\\w.]+"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }


var UU5STRING_REGEXP = _uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_0__["REGEXP"].uu5string;
var UU5JSON_REGEXP = _uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_0__["REGEXP"].uu5json;
var UU5DATA_REGEXP = _uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_0__["REGEXP"].uu5data;
var JSCODE_REGEXP = _uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_0__["REGEXP"].jsCode;
var COMPONENT_NAME = String.raw(_templateObject()); // TODO Make stricter matching of unquoted attribute value, e.g. now it can be
// <X attr=\"value<uu5json/>{}"/> resulting in
// tag `X` with attr `attr` with value `\"value<uu5json` and ending as self-closing tag, followed by text `{}"/>`

var ATTR = String.raw(_templateObject2()); // groups: attr separator, attr name, value separator, attr value, indication whether without quotes

var TAG = String.raw(_templateObject3(), COMPONENT_NAME, ATTR, COMPONENT_NAME); // groups: comp name, attrs, -, -, -, -, -, -, self-closing, closing comp name

var INVALID_OPENING_TAG = String.raw(_templateObject4(), COMPONENT_NAME, ATTR); // groups: comp name, partial attrs, -, -, -, -, -, -

var INVALID_CLOSING_TAG = String.raw(_templateObject5(), COMPONENT_NAME); // groups: closing comp name

var ATTR_REGEXP = new RegExp(ATTR); // groups: see ATTR

var ATTR_VALUE_TYPE_REGEXP = new RegExp(String.raw(_templateObject6(), _uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_0__["REGEXP"].uu5json.source, _uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_0__["REGEXP"].uu5string.source, _uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_0__["REGEXP"].uu5data.source)); // groups: uu5json, uu5string, uu5data

var TEMPLATE_REG_EXP = new RegExp(_uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_0__["REGEXP"].uu5stringTemplate.source, "g");
var CHECK_IS_TEMPLATE = new RegExp("^".concat(_uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_0__["REGEXP"].uu5stringTemplate.source, "$"));

/***/ }),
/* 40 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var Environment = {
  uu5DataMap: {},
  textEntityMap: {}
};
/* harmony default export */ __webpack_exports__["default"] = (Environment);

/***/ }),
/* 41 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UU5Data", function() { return UU5Data; });
/* harmony import */ var _uu5_environment_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(40);
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(39);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var UU5Data = /*#__PURE__*/function () {
  function UU5Data() {
    _classCallCheck(this, UU5Data);
  }

  _createClass(UU5Data, null, [{
    key: "parse",
    value: function parse(uu5Data, parentParsingContext) {
      uu5Data = uu5Data.replace(_constants_js__WEBPACK_IMPORTED_MODULE_1__["UU5DATA_REGEXP"], "");
      var data = _uu5_environment_js__WEBPACK_IMPORTED_MODULE_0__["default"].uu5DataMap && _uu5_environment_js__WEBPACK_IMPORTED_MODULE_0__["default"].uu5DataMap[uu5Data];

      if (_typeof(data) === undefined) {
        console.warn("There is no component data in Environment.uu5DataMap for uu5Data: ".concat(uu5Data, " !"), {
          uu5Data: uu5Data
        });
      }

      return data;
    }
  }]);

  return UU5Data;
}();
/* harmony default export */ __webpack_exports__["default"] = (UU5Data);

/***/ }),
/* 42 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UU5Json", function() { return UU5Json; });
/* harmony import */ var _uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


var UU5_JSON_REGEXP = /^\s*<uu5json\s*\/>/;
var UU5Json = /*#__PURE__*/function () {
  _createClass(UU5Json, null, [{
    key: "parse",
    value: function parse(uu5Json, onAttributeCallback, parentParsingContext) {
      var json = UU5Json.toJson(uu5Json);
      var value = null;

      try {
        value = JSON.parse(json);

        if (typeof onAttributeCallback === "function") {
          parseWithWalk(json, function (_ref) {
            var key = _ref.key,
                value = _ref.value,
                valueStartIndex = _ref.valueStartIndex,
                revertToUnparsedValueFns = _ref.revertToUnparsedValueFns;
            onAttributeCallback(key, value, {
              string: uu5Json,
              index: uu5Json.length - json.length + valueStartIndex,
              revertToUnparsedValueFns: revertToUnparsedValueFns,
              parentParsingContext: parentParsingContext
            });
          });
        }
      } catch (err) {
        if (!err.context) {
          _uu5_common_tools_js__WEBPACK_IMPORTED_MODULE_0__["default"].error("Error uu5JSON parse.", {
            uu5Json: json,
            cause: err
          });
          err.code = "uu5JsonInvalid";
          err.context = {
            json: json,
            index: uu5Json.length - json.length + Number((err.message.match(/position (\d+)/) || {})[1] || 0),
            string: uu5Json,
            parentParsingContext: parentParsingContext
          };
        }

        throw err;
      }

      return value;
    }
  }, {
    key: "toJson",
    value: function toJson(uu5Json) {
      return uu5Json.replace(UU5_JSON_REGEXP, "");
    }
  }]);

  function UU5Json(json) {
    _classCallCheck(this, UU5Json);

    this._uu5json = json;
    this._object = UU5Json.parse(json);
  }

  _createClass(UU5Json, [{
    key: "toUU5Json",
    value: function toUU5Json() {
      return this._uu5json;
    }
  }, {
    key: "toJson",
    value: function toJson() {
      return this._uu5json;
    }
  }, {
    key: "toObject",
    value: function toObject() {
      return this._object;
    }
  }, {
    key: "clone",
    value: function clone() {
      return new UU5Json(this._uu5json);
    }
  }]);

  return UU5Json;
}();

function parseWithWalk(string, onAttribute) {
  // NOTE Assumes that string is valid JSON.
  // https://www.json.org/
  var index = skipWhitespace(string, 0);
  parseValue(string, index, "", onAttribute);
}

function parseValue(text, i, parentKey, onAttribute) {
  var startIndex = i;
  var m;

  if (text[i] === "{") {
    // object
    var obj = {};
    var first = true;
    ++i;

    while (true) {
      var hasComma = false;
      i = skipWhitespace(text, i);

      if (!first && text[i] !== "}") {
        if (text[i] === ",") {
          hasComma = true;
          i = skipWhitespace(text, i + 1);
        } else {
          throwError("Expected ',' or '}'", i, text);
        }
      } else {
        first = false;
      }

      if (text[i] === '"') {
        var _parseString = parseString(text, i),
            key = _parseString.value,
            index = _parseString.endIndex;

        index = skipWhitespace(text, index);
        if (text[index] !== ":") throwError("Expected ':'", index, text);
        index = skipWhitespace(text, index + 1);
        var fullKey = (parentKey ? parentKey + "." : "") + key;

        var _parseValue = parseValue(text, index, fullKey, onAttribute),
            value = _parseValue.value,
            valueStartIndex = _parseValue.startIndex,
            valueEndIndex = _parseValue.endIndex,
            revertToUnparsedValueFns = _parseValue.revertToUnparsedValueFns;

        onAttribute({
          key: fullKey,
          value: value,
          valueStartIndex: valueStartIndex,
          valueEndIndex: valueEndIndex,
          revertToUnparsedValueFns: revertToUnparsedValueFns
        });
        i = valueEndIndex;
        obj[key] = value;
      } else if (text[i] === "}") {
        if (hasComma) throwError("Expected '\"' due to previous comma", i, text);
        return {
          value: obj,
          startIndex: startIndex,
          endIndex: i + 1
        };
      } else {
        throwError("Expected '}' or '\"'", i, text);
      }
    }
  } else if (text[i] === "[") {
    // array
    var list = [];
    var _first = true;
    var arrayIndex = -1;
    ++i;

    while (true) {
      ++arrayIndex;
      var _hasComma = false;
      i = skipWhitespace(text, i);

      if (!_first && text[i] !== "]") {
        if (text[i] === ",") {
          _hasComma = true;
          i = skipWhitespace(text, i + 1);
        } else {
          throwError("Expected ',' or ']'", i, text);
        }
      } else {
        _first = false;
      }

      if (text[i] === "]") {
        if (_hasComma) throwError("Expected array item due to previous comma", i, text);
        return {
          value: list,
          startIndex: startIndex,
          endIndex: i + 1
        };
      } else {
        var _key = arrayIndex + "";

        var _fullKey = (parentKey ? parentKey + "." : "") + _key;

        var _parseValue2 = parseValue(text, i, _fullKey, onAttribute),
            _value = _parseValue2.value,
            _valueStartIndex = _parseValue2.startIndex,
            _valueEndIndex = _parseValue2.endIndex,
            _revertToUnparsedValueFns = _parseValue2.revertToUnparsedValueFns;

        onAttribute({
          key: _fullKey,
          value: _value,
          valueStartIndex: _valueStartIndex,
          valueEndIndex: _valueEndIndex,
          revertToUnparsedValueFns: _revertToUnparsedValueFns
        });
        i = _valueEndIndex;
        list.push(_value);
      }
    }
  } else if (text[i] === '"') {
    // string
    return parseString(text, i);
  } else if ((text[i] === "-" || text[i].match(/[0-9]/)) && (m = text.substr(i).match(/^-?(?:0|[1-9]\d*)(?:\.\d+)?(?:[eE](?:[-+])?\d+)?/))) {
    // number
    return {
      value: Number(m[0]),
      startIndex: startIndex,
      endIndex: i + m[0].length
    };
  } else if (text.substr(i, 4) === "null") {
    return {
      value: null,
      startIndex: startIndex,
      endIndex: i + 4
    };
  } else if (text.substr(i, 4) === "true") {
    return {
      value: true,
      startIndex: startIndex,
      endIndex: i + 4
    };
  } else if (text.substr(i, 5) === "false") {
    return {
      value: false,
      startIndex: startIndex,
      endIndex: i + 5
    };
  } else {
    throwError("Expected object / array / string / number / true / false / null", i, text);
  }
}

function skipWhitespace(text, i) {
  var len = text.length;

  while (i < len && text[i].match(/\s/)) {
    ++i;
  }

  return i;
}

function parseString(text, i) {
  var unparsedValueArr = [];
  var startIndex = i;
  ++i;
  var len = text.length;
  var valueArr = [];

  while (i < len && text[i] !== '"') {
    if (text[i] === "\\") {
      var matched = false;
      text.substr(++i, 5).replace(/^["\\/bfnrt]|^u[a-fA-F0-9]{4}/, function (m) {
        matched = true;
        unparsedValueArr.push(text.substr(i - 1, 1 + m.length));
        i += m.length;
        if (m.length > 1) valueArr.push(String.fromCodePoint(Number("0x" + m.substr(1))));else if (m === "b") valueArr.push("\b");else if (m === "f") valueArr.push("\f");else if (m === "n") valueArr.push("\n");else if (m === "r") valueArr.push("\r");else if (m === "t") valueArr.push("\t");else valueArr.push(m);
      });
      if (!matched) throwError("Unsupported escape sequence", i - 1, text);
    } else {
      valueArr.push(text[i]);
      unparsedValueArr.push(text[i]);
      ++i;
    }
  }

  if (text[i] !== '"') throwError("Unterminated string literal starting", startIndex, text);
  var value = valueArr.join("");
  return {
    startIndex: startIndex,
    endIndex: i + 1,
    value: value,
    revertToUnparsedValueFns: [function (unescapedString) {
      if (!value.startsWith(unescapedString)) throw new Error("Cannot revert string to escaped form. The string was not parsed using context of this reversion function."); // NOTE Can't use regexp for escaping because backslash before "/" is optional and some characters
      // could have also been originally written using \uXXXX sequences.

      return '"' + unparsedValueArr.slice(0, unescapedString.length).join("");
    }]
  };
}

function throwError(msg, position, text) {
  throw new Error(msg + " @" + position + ":\n" + text.substr(position, 79));
}

/* harmony default export */ __webpack_exports__["default"] = (UU5Json);

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(44);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(23)();
};

var update = __webpack_require__(24)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(22)(false);
// Module
exports.push([module.i, "", ""]);



/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _code_editor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);
/* harmony import */ var _markdown_editor_less__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(46);
/* harmony import */ var _markdown_editor_less__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_markdown_editor_less__WEBPACK_IMPORTED_MODULE_3__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }





var MarkdownEditor = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
  //@@viewOn:statics
  statics: {
    tagName: _lib_js__WEBPACK_IMPORTED_MODULE_1__["default"].app + ".MarkdownEditor",
    classNames: {
      main: _lib_js__WEBPACK_IMPORTED_MODULE_1__["default"].css + "-markdown-editor"
    },
    opt: {
      hoc: true
    }
  },
  //@@viewOff:statics
  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps
  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle
  //@@viewOn:interface
  //@@viewOff:interface
  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods
  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers
  //@@viewOn:render
  render: function render() {
    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_code_editor_js__WEBPACK_IMPORTED_MODULE_2__["default"], _extends({}, this.props, {
      codeStyle: "markdown"
    }));
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (MarkdownEditor);

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(47);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(23)();
};

var update = __webpack_require__(24)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(22)(false);
// Module
exports.push([module.i, "", ""]);



/***/ }),
/* 48 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7);
/* harmony import */ var _on_demand_component_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(18);
/* harmony import */ var _markdown_viewer_less__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(49);
/* harmony import */ var _markdown_viewer_less__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_markdown_viewer_less__WEBPACK_IMPORTED_MODULE_4__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

// documentation: https://uuapp.plus4u.net/uu-bookkit-maing01/f2142743693e4b22b1753c9fb761e945/book/page?code=UU5CodeKitMarkdownViewer
//@@viewOn:revision
// coded: Petr Bišof, 1.09.2020
// reviewed: Martin Mach, 14.09.2020
//@@viewOff:revision
//@@viewOn:imports




var MARKDOWN_INTERNAL_URL =  true ? "./uu5codekitg01-markdown.js" : undefined;

var EditationComponent = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Component.lazy( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return SystemJS.import("uu5g04-forms");

        case 2:
          _context.next = 4;
          return SystemJS.import("uu5g04-bricks-editable");

        case 4:
          return _context.abrupt("return", __webpack_require__.e(/* import() */ 0).then(__webpack_require__.bind(null, 57)));

        case 5:
        case "end":
          return _context.stop();
      }
    }
  }, _callee);
})));
var tagName = _lib_js__WEBPACK_IMPORTED_MODULE_2__["default"].app + ".MarkdownViewer";
var MarkdownViewer = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
  //eslint-disable-line react/no-deprecated
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.BaseMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.ElementaryMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.SectionMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.EditableMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: tagName,
    classNames: {
      main: _lib_js__WEBPACK_IMPORTED_MODULE_2__["default"].css + "-markdown-viewer"
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    value: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.string
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      value: ""
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:standardComponentLifeCycle
  //@@viewOn:reactLifeCycle
  getInitialState: function getInitialState() {
    var _this = this;

    Object(_on_demand_component_js__WEBPACK_IMPORTED_MODULE_3__["load"])(MARKDOWN_INTERNAL_URL, function (Lib, error) {
      if (error || !Lib) return;
      var Component = Lib.MarkdownRenderer;
      _this._rm = new Component("full", {
        html: true,
        typographer: true,
        highlight: true,
        headerLevel: _this.checkLevel() + 1
      });
      if (_this._mounted && _this.state.value) _this.setState({
        uu5string: _this._renderValue(_this.state.value)
      });
    });
    return {
      value: "",
      uu5string: ""
    };
  },
  componentWillMount: function componentWillMount() {
    var value = this.props.value || uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Children.toArray(this.props.children).join("");

    var s = this._renderValue(value);

    var state = {
      value: value,
      uu5string: s
    };
    this.setState(state);
  },
  componentDidMount: function componentDidMount() {
    this._mounted = true;
  },
  componentWillReceiveProps: function componentWillReceiveProps(newProps) {
    var value = newProps.value || uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Children.toArray(newProps.children).join("");

    var s = this._renderValue(value);

    this.setState({
      value: value,
      uu5string: s
    });
  },
  componentWillUnmount: function componentWillUnmount() {
    this._mounted = false;
  },
  shouldComponentUpdate: function shouldComponentUpdate(newProps, newState) {
    return !(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Tools.deepEqual(this.props, newProps) && uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Tools.deepEqual(this.state, newState));
  },
  //@@viewOff:reactLifeCycle
  //@@viewOff:standardComponentLifeCycle
  //@@viewOn:interface
  setValue: function setValue(value) {
    var s = this._renderValue(value);

    this.setState({
      value: value,
      uu5string: s
    });
  },
  getValue: function getValue() {
    return {
      value: this.state.value,
      uu5string: this.state.uu5string
    };
  },
  //@@viewOff:interface
  //@@viewOn:overriding
  onBeforeForceEndEditation_: function onBeforeForceEndEditation_() {
    return this._editableComponent ? this._editableComponent.getPropsToSave() : undefined;
  },
  //@@viewOff:overriding
  //@@viewOn:componentSpecificHelpers
  //@@viewOn:private
  _renderValue: function _renderValue(value) {
    return this._rm ? this._rm.render(value) : "";
  },
  _renderEditationMode: function _renderEditationMode() {
    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Suspense, {
      fallback: this.getEditingLoading()
    }, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(EditationComponent, {
      component: this,
      ref_: this._registerEditableComponent
    }));
  },
  _registerEditableComponent: function _registerEditableComponent(ref) {
    this._editableComponent = ref;
  },
  //@@viewOff:private
  //@@viewOff:componentSpecificHelpers
  //@@viewOn:render
  render: function render() {
    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Fragment, null, this.isNotInlineEdited() && uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Bricks.Section, _extends({}, this.getMainPropsToPass(), {
      header: this.props.header,
      footer: this.props.footer,
      content: this.state.uu5string
    })), this.isInlineEdited() && this._renderEditationMode());
  } //className={this.getClassName().main}
  //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (MarkdownViewer);

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(50);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(23)();
};

var update = __webpack_require__(24)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(22)(false);
// Module
exports.push([module.i, "", ""]);



/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16);
/* harmony import */ var uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_bricks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7);
/* harmony import */ var _ace_ace_editor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(10);
/* harmony import */ var _code_viewer_less__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(52);
/* harmony import */ var _code_viewer_less__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_code_viewer_less__WEBPACK_IMPORTED_MODULE_4__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

//@@viewOn:revision
// coded: Martin Mach, 07.09.2020
// reviewed: Petr Bišof, 14.09.2020
//@@viewOff:revision
//@@viewOn:imports





var EditationComponent = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Component.lazy( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return SystemJS.import("uu5g04-bricks");

        case 2:
          _context.next = 4;
          return SystemJS.import("uu5g04-forms");

        case 4:
          _context.next = 6;
          return SystemJS.import("uu5g04-bricks-editable");

        case 6:
          return _context.abrupt("return", __webpack_require__.e(/* import() */ 0).then(__webpack_require__.bind(null, 58)));

        case 7:
        case "end":
          return _context.stop();
      }
    }
  }, _callee);
}))); //@@viewOff:imports

var tagName = _lib_js__WEBPACK_IMPORTED_MODULE_2__["default"].app + ".CodeViewer";
var CodeViewer = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.VisualComponent.create({
  //eslint-disable-line react/no-deprecated
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.BaseMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.ElementaryMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.ContentMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.EditableMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: tagName,
    classNames: {
      main: _lib_js__WEBPACK_IMPORTED_MODULE_2__["default"].css + "-code-viewer"
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: _ace_ace_editor_js__WEBPACK_IMPORTED_MODULE_3__["propTypes"],
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return _objectSpread({}, _ace_ace_editor_js__WEBPACK_IMPORTED_MODULE_3__["defaultProps"], {
      rows: undefined
    });
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  componentWillMount: function componentWillMount() {
    var value = this._trim(this.props.value || uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Children.toArray(this.props.children).join(""));

    var rows = this.props.rows ? this.props.rows : this._countRows(value);
    this.setState({
      rows: rows,
      value: value
    });
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    var value = this._trim(nextProps.value || uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Children.toArray(nextProps.children).join(""));

    var rows = nextProps.rows ? nextProps.rows : this._countRows(value);
    this.setState({
      rows: rows,
      value: value
    });
  },
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  setValue: function setValue(value) {
    this._textInput.setValue(this._trim(value));
  },
  getInput: function getInput() {
    return this._textInput;
  },
  //@@viewOff:interface
  //@@viewOn:overriding
  onBeforeForceEndEditation_: function onBeforeForceEndEditation_() {
    return this._editableComponent ? this._editableComponent.getPropsToSave() : undefined;
  },
  //@@viewOff:overriding
  //@@viewOn:private
  _renderEditationMode: function _renderEditationMode() {
    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Suspense, {
      fallback: this.getEditingLoading()
    }, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(EditationComponent, {
      component: this,
      ref_: this._registerEditableComponent
    }));
  },
  _registerEditableComponent: function _registerEditableComponent(ref) {
    this._editableComponent = ref;
  },
  _countRows: function _countRows(value) {
    var count = 1;
    if (value) for (var i = value.length - 1; i >= 0; --i) {
      if (value[i] === "\n") count++;
    }
    return count;
  },
  _trim: function _trim(value) {
    return value.replace(/^(?:\s*[\r\n])*|(?:\s*[\r\n])*$/g, "");
  },
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    var _this = this;

    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Fragment, null, this.isNotInlineEdited() && uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_ace_ace_editor_js__WEBPACK_IMPORTED_MODULE_3__["default"], _extends({}, this.props, this.getMainPropsToPass(), {
      ref_: function ref_(ace) {
        return _this._textInput = ace;
      },
      mode: this.props.mode,
      rows: this.state.rows,
      value: this.state.value || this.props.content,
      readOnly: true
    })), this.isInlineEdited() && this._renderEditationMode());
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (CodeViewer);

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(53);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(23)();
};

var update = __webpack_require__(24)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(22)(false);
// Module
exports.push([module.i, ".uu5-codekit-code-viewer:after {\n  display: block;\n  position: relative;\n  content: '';\n  clear: both;\n}\n.uu5-codekit-code-viewer .uu5-forms-message {\n  margin-top: -4px;\n}\n", ""]);



/***/ })
/******/ ]);
});