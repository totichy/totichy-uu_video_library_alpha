/*!
 * UAF Licence for the uu5 software.
 * 
 * Copyright (c) 2016-present, Unicorn a.s.
 * All rights reserved.
 * 
 * Definitions
 * -----------
 * This licence agreement is based on the original "BSD Licence" published by
 * the Regents of the University of California in 1990.
 * 
 * The term "Software" means the uu5 package, its modules, components,
 * all program files, source code, examples, media, and documentation which are part
 * of the Software package, as well as any portion of them. The term "Author" means
 * Unicorn a.s. and all its subsidiaries and/or affiliates.
 * 
 * Licence Agreement
 * -----------------
 * 
 * Redistribution and use of this Software in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. All derivative products containing user interface must display the following
 *    acknowledgement in the appropriate "About window" or website section accessible
 *    by all users of the product:
 * 
 *      This product includes following software developed by
 *      <a href="https://unicorn.com">Unicorn a.s.</a>:
 *      <a href="https://uuapp.plus4u.net/uu-bookkit-maing01/86b4d5a4a030400784764ebdb972bbda/book">UAF</a>,
 *      <a href="https://docs.plus4u.net/uaf/uuapp/uu5">uu5</a>.
 * 
 * 4. All derivative products must not block the default uu5 browser console message containing
 *    Software version information and copyright notice of the Author.
 * 
 * 5. The use of any portion of this Software is not allowed in the products
 *    that fully or partially resemble the functionality of the Software
 *    or otherwise compete with the Software unless they are licenced under the same licence
 *    conditions and provided free of charge. Specific prior written permission is required otherwise.
 * 
 * 6. Neither the name of the Author nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * Disclaimer
 * ----------
 * THIS SOFTWARE IS PROVIDED BY AUTHOR "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
(window["__webpack_jsonp_uu5richtextg01_1_14_1_uu5richtextg01"] = window["__webpack_jsonp_uu5richtextg01_1_14_1_uu5richtextg01"] || []).push([[0],{

/***/ 284:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(49);
/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(draft_js__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ __webpack_exports__["default"] = (draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorBlock"]);

/***/ }),

/***/ 287:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Style", function() { return Style; });
/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(49);
/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(draft_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _selection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48);
function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }



var UL_TYPE = "unordered-list-item";
var OL_TYPE = "ordered-list-item";

var checkListItemsLevel = function checkListItemsLevel(block, anotherBlock) {
  return block && anotherBlock && anotherBlock.getDepth() >= block.getDepth() && (anotherBlock.getDepth() !== 0 && (anotherBlock.getType() === UL_TYPE || anotherBlock.getType() === OL_TYPE) || anotherBlock.getDepth() === 0 && anotherBlock.getType() === block.getType());
};

var Style = {
  /*
    @param editorState [EditorState] - state of the editor
    @param styleName [string] - name of the style
    @returns new editor state
  */
  toggleInline: function toggleInline(editorState, styleName, preserveStyle) {
    var separatorIndex = styleName.indexOf("."); // at first remove all styles from same style group - styleName is defined like a StyleGroup.Name

    if (separatorIndex !== -1) {
      // get name of prefix
      var prefix = styleName.substr(0, separatorIndex);
      var regExp = new RegExp("^".concat(prefix, "\\.")); // find all styles in selection with prefix

      var toRemove = Style.getStylesFromSelection(editorState).filter(function (item) {
        return item.match(regExp);
      }); // add set styleName only if it isn't on start of selection

      var addStyleName = preserveStyle || !editorState.getCurrentInlineStyle().has(styleName); // remove all founded styles with same prefix

      editorState = Style.removeInline(editorState, toRemove); // add style if it wasn't set before

      if (addStyleName && styleName.length > separatorIndex + 1) {
        editorState = draft_js__WEBPACK_IMPORTED_MODULE_0__["RichUtils"].toggleInlineStyle(editorState, styleName);
      }

      return editorState;
    }

    return draft_js__WEBPACK_IMPORTED_MODULE_0__["RichUtils"].toggleInlineStyle(editorState, styleName);
  },

  /* 
    @param editorState [EditorState] - state of editor
    @param styleNames [string or array of strings] - inline styles to remove from editor state
    @returns new editor state
   */
  removeInline: function removeInline(editorState, styleNames) {
    if (typeof styleNames === "string") {
      if (styleNames === "*") {
        styleNames = Style.getAllStyleNamesFromSelection(editorState);
      } else {
        styleNames = [styleNames];
      }
    }

    var newEditorState = editorState; // filter whitespace formating -> this format sets only meta information about original structure

    styleNames = styleNames.filter(function (style) {
      return !style.match(/^whitespace\./);
    }); // remove all inline styles from array

    styleNames.forEach(function (item) {
      // only cursor without selection
      if (newEditorState.getSelection().isCollapsed()) {
        if (newEditorState.getCurrentInlineStyle().has(item)) {
          newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_0__["RichUtils"].toggleInlineStyle(newEditorState, item);
        }
      } else {
        // remove inline from whole selection
        var content = draft_js__WEBPACK_IMPORTED_MODULE_0__["Modifier"].removeInlineStyle(newEditorState.getCurrentContent(), newEditorState.getSelection(), item);
        newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].set(newEditorState, {
          currentContent: content
        });
      }
    }); // switch editorState contents to enable push new content into history

    var newContent = newEditorState.getCurrentContent();
    newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].set(newEditorState, {
      currentContent: editorState.getCurrentContent()
    });
    return draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].push(newEditorState, newContent, "remove inline styles");
  },

  /*
    @param editorState [EditorState] - state of editor
    @param blockType [string] - type of new block
    @returns [EditorState] updated editor state
   */
  toggleBlock: function toggleBlock(editorState, blockType) {
    var newEditorState = editorState;
    var selection = editorState.getSelection();
    var currentContent = editorState.getCurrentContent();
    var block = currentContent.getBlockForKey(selection.getStartKey()); // handle change of list types block

    if ((block.getType() === UL_TYPE || block.getType() === OL_TYPE) && (blockType === UL_TYPE || blockType === OL_TYPE) && block.getType() !== blockType) {
      var blockDepth = block.getDepth(); // find all blocks in this level and change blockType for all of this blocks

      var blockKeysToProcess = [block.getKey()]; // process list blocks before current block

      var blockBefore = currentContent.getBlockBefore(block.getKey());

      while (checkListItemsLevel(block, blockBefore)) {
        if (blockBefore.getDepth() === blockDepth) {
          blockKeysToProcess.push(blockBefore.getKey());
        }

        blockBefore = currentContent.getBlockBefore(blockBefore.getKey());
      } // process list block after current block


      var blockAfter = currentContent.getBlockAfter(block.getKey());

      while (checkListItemsLevel(block, blockAfter)) {
        if (blockAfter.getDepth() === blockDepth) {
          blockKeysToProcess.push(blockAfter.getKey());
        }

        blockAfter = currentContent.getBlockAfter(blockAfter.getKey());
      } // store original selection


      var originalSelection = editorState.getSelection(); // update block types

      for (var i = 0; i < blockKeysToProcess.length; i++) {
        var key = blockKeysToProcess[i]; // select blocks

        var newSelection = _selection_js__WEBPACK_IMPORTED_MODULE_1__["default"].modifySelection(editorState, {
          anchorKey: key,
          anchorOffset: 0,
          focusKey: key,
          focusOffset: currentContent.getBlockForKey(key).getText().length
        }); // update selected block type

        newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_0__["RichUtils"].toggleBlockType(draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].set(newEditorState, {
          selection: newSelection
        }), blockType);
      } // return original selection


      newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].set(newEditorState, {
        selection: originalSelection
      }); // update depth of changed block - draft reset block's depth to 0

      var newContent = newEditorState.getCurrentContent();
      var blockMap = newContent.getBlockMap();

      for (var _i = 0; _i < blockKeysToProcess.length; _i++) {
        var _key = blockKeysToProcess[_i]; // update depth of the block

        var updatedBlock = newContent.getBlockForKey(_key).set("depth", blockDepth); // update blockMap

        blockMap = blockMap.set(_key, updatedBlock);
      } // set updated block map back to content


      newContent = newContent.set("blockMap", blockMap);
      newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].push(newEditorState, newContent, "toggle block");
    } else {
      newEditorState = draft_js__WEBPACK_IMPORTED_MODULE_0__["RichUtils"].toggleBlockType(editorState, blockType);
    }

    return newEditorState;
  },
  toggleSelectedBlocksStyles: function toggleSelectedBlocksStyles(editorState, blockStyles, updateStyleFn) {
    var newEditorState = editorState;
    _selection_js__WEBPACK_IMPORTED_MODULE_1__["default"].updateSelectedBlocks(editorState, function (block) {
      newEditorState = Style.toggleBlockStyles(newEditorState, block, blockStyles, updateStyleFn); // all changes in editorState is made locally here => return null to block updates of unused editorState ( optimalization )

      return null;
    });
    return newEditorState;
  },

  /*
    @param editorState
    @param blockStyles [array of objects] - array contains objects defining styles to update. Each object is composited by name of css style and its value
    @returns [EditorState] updated editor state
  */
  toggleBlockStyles: function toggleBlockStyles(editorState, block, blockStyles, updateStyleFn) {
    var selection = editorState.getSelection(); // update only for first block of selection

    selection = _selection_js__WEBPACK_IMPORTED_MODULE_1__["default"].modifySelection(editorState, {
      anchorKey: block.getKey(),
      anchorOffset: 0,
      focusKey: block.getKey(),
      focusOffset: 0
    });
    var currentContent = editorState.getCurrentContent();
    var data = block.getData().toJSON();
    data.props = data.props || {};
    var props = data.props;
    props.style = props.style || {};
    var style = props.style;

    if (typeof updateStyleFn === "function") {
      props.style = updateStyleFn(style) || style;
    } else {
      if (blockStyles.every(function (item) {
        return style[item.name] === item.value;
      })) {
        // remove styles
        blockStyles.forEach(function (item) {
          return delete style[item.name];
        });
      } else {
        blockStyles.forEach(function (item) {
          return style[item.name] = item.value;
        });
      }
    }

    if (Object.keys(style).length === 0) {
      delete props.style;
    }

    var newContent = draft_js__WEBPACK_IMPORTED_MODULE_0__["Modifier"].setBlockData(currentContent, selection, data);
    return draft_js__WEBPACK_IMPORTED_MODULE_0__["EditorState"].push(editorState, newContent, "toggle block style");
  },

  /*
    @param editorState [EditorState] - state of editor
    @param type ["inline" or "block"] - type of style to check
    @param name [string] - name of a style or block or entity to check
    @return bool
   */
  isSelected: function isSelected(editorState, type, name) {
    if (!editorState) return false;
    var block;
    var entity;
    var entityKey;
    var selection = editorState.getSelection();
    var content = editorState.getCurrentContent();
    var result = false;

    switch (type) {
      case "inline":
        result = editorState.getCurrentInlineStyle().has(name);
        break;

      case "block":
        block = content.getBlockForKey(selection.getAnchorKey());
        result = !!block && block.getType() === name;
        break;

      case "entity":
        block = content.getBlockForKey(selection.getAnchorKey());
        entityKey = block && block.getEntityAt(selection.getStartOffset());

        if (entityKey) {
          entity = content.getEntity(entityKey);
          result = entity.type === name;
        }

        break;
    }

    return result;
  },

  /*
    Returns all inline styles used in selection.
     @param editorState [EditorState] - state of editor
    @returns [array of strings] - array of styles used in selection
   */
  getStylesFromSelection: function getStylesFromSelection(editorState) {
    var result = [];
    var selection = editorState.getSelection();

    if (selection.isCollapsed()) {
      var _iterator = _createForOfIteratorHelper(editorState.getCurrentInlineStyle().keys()),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var style = _step.value;
          result.push(style);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    } else {
      (function () {
        var startKey = selection.getStartKey();
        var endKey = editorState.getSelection().getEndKey();
        var content = editorState.getCurrentContent();
        var block = content.getBlockForKey(startKey);
        var styles = {}; // iterate through all blocks in selection

        while (block) {
          block.getCharacterList().forEach(function (character) {
            return character.getStyle().forEach(function (style) {
              return styles[style] = true;
            });
          });
          var currentKey = block.getKey();
          block = currentKey === endKey ? null : content.getBlockAfter(currentKey);
        }

        for (var _style in styles) {
          result.push(_style);
        }
      })();
    }

    return result;
  },
  getCurrentStylesWithPrefix: function getCurrentStylesWithPrefix(editorState, prefix) {
    var result = [];
    var regexp = new RegExp("^".concat(prefix, "\\."));
    var styles = editorState.getCurrentInlineStyle().keys();

    var _iterator2 = _createForOfIteratorHelper(styles),
        _step2;

    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var style = _step2.value;

        if (style.match(regexp)) {
          result.push(style);
        }
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }

    return result;
  },
  getAllStyleNamesFromSelection: function getAllStyleNamesFromSelection(editorState) {
    var result = [];
    var selection = editorState.getSelection();
    var insideSelection = false;
    var singleBlockSelection = selection.getEndKey() === selection.getStartKey();
    var startOffset = selection.getStartOffset();
    var endOffset = selection.getEndOffset();

    if (singleBlockSelection) {
      var block = editorState.getCurrentContent().getBlockForKey(editorState.getSelection().anchorKey);
      var styles;
      block.findStyleRanges(function (charMetaData) {
        styles = charMetaData.getStyle().toJS();
        return styles.length > 0;
      }, function (startIndex, endIndex) {
        if (startIndex >= startOffset && startIndex < endOffset || endIndex > startOffset && endIndex <= endOffset || startIndex < startOffset && endIndex > endOffset) {
          result = result.concat(styles);
        }
      });
    } else {
      (function () {
        var resultMap = {};
        var blocks = editorState.getCurrentContent().getBlocksAsArray();

        var _loop = function _loop(i) {
          var block = blocks[i]; // process first block

          if (block.getKey() === selection.getStartKey()) {
            var _styles;

            block.findStyleRanges(function (charMetaData) {
              _styles = charMetaData.getStyle().toJS();
              return true;
            }, function (startIndex) {
              if (startIndex >= selection.getStartOffset()) {
                _styles.forEach(function (styleName) {
                  return resultMap[styleName] = true;
                });
              }
            });
            insideSelection = true;

            if (block.getKey() === selection.getEndKey()) {
              return "break";
            } else {
              return "continue";
            }
          } // process last block


          if (block.getKey() === selection.getEndKey()) {
            var _styles2;

            block.findStyleRanges(function (charMetaData) {
              _styles2 = charMetaData.getStyle().toJS();
              return true;
            }, function (startIndex) {
              if (startIndex < selection.getEndOffset()) {
                _styles2.forEach(function (styleName) {
                  return resultMap[styleName] = true;
                });
              }
            });
            return "break";
          } // skip blocks before selected block


          if (!insideSelection) return "continue"; // process blocks inside selection

          var styles = void 0;
          block.findStyleRanges(function (charMetaData) {
            return styles = charMetaData.getStyle().toJS();
          }, function (startIndex) {
            if (startIndex < selection.getEndOffset()) {
              styles.forEach(function (styleName) {
                return resultMap[styleName] = true;
              });
            }
          });
        };

        for (var i = 0; i < blocks.length; i++) {
          var _ret = _loop(i);

          if (_ret === "break") break;
          if (_ret === "continue") continue;
        }

        for (var styleName in resultMap) {
          result.push(styleName);
        }
      })();
    }

    return result;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (Style);

/***/ }),

/***/ 291:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Toolbar", function() { return Toolbar; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(40);
/* harmony import */ var _toolbar_button_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(292);
/* harmony import */ var _bricks_style_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(287);
/* harmony import */ var _toolbar_less__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(293);
/* harmony import */ var _toolbar_less__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_toolbar_less__WEBPACK_IMPORTED_MODULE_4__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

//@@viewOn: revision
// coded:
//  Martin Mach, 10.01.2021
//  Filip Janovský: 12.01.2021
// reviewed: Filip Janovský: 12.01.2021
//@@viewOff:revision





var iconWidth = 32;

function getCharFromKeyCode(keyCode) {
  var isSpecial = keyCode <= 64 || keyCode >= 91;
  return isSpecial ? SPECIAL_CHARS_CODES[keyCode] : String.fromCharCode(96 <= keyCode && keyCode <= 105 ? keyCode - 48 : keyCode);
}

var SPECIAL_CHARS_CODES = {
  9: "Tab",
  13: "Enter",
  53: "5"
};
var Toolbar = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].LsiMixin.withContext(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].VisualComponent.create({
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].BaseMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].ElementaryMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].ResizeMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].LsiMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].TAG + "Toolbar",
    classNames: {
      main: function main(props, state) {
        return _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].CSS + "toolbar " + uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Css.css("\n            max-height: 34px;\n            border: 1px solid #BDBDBD;\n            ".concat(props.dynamic && state.empty ? "height: 0; border: none;" : "", "\n            pointer-events: ").concat(state.empty && props.dynamic ? "none" : "auto", ";\n            overflow: ").concat(state.empty && props.dynamic ? "hidden" : "visible", ";\n            ").concat(!state.empty && props.dynamic && props.animated ? "animation-name: uu5-richtext-toolbar-show; animation-duration: 0.5s;" : "", ";\n\n            & > * {\n              position: relative;\n              ").concat(props.animated && props.dynamic ? "transition: top 0.5s;" : "", "\n            }\n\n            && > * {\n              top: ").concat(props.dynamic && state.empty ? -35 : 0, "px;\n            }\n          "));
      },
      invisible: function invisible() {
        return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Css.css("visibility: hidden;");
      },
      background: function background() {
        return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Css.css("\n            height: 32px;\n            background: #FFFFFF;\n          ");
      }
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    items: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].arrayOf(uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].shape({
      icon: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
      items: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].arrayOf(uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].shape({
        label: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string, uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].object, uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func]),
        value: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
        usePrefix: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool
      })),
      label: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].oneOfType([uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string, uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].object, uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func]),
      type: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].oneOf(["inline", "block", "entity", "custom", "customEntity", "customBlock"]),
      value: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string
    })),
    getArea: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func,
    animated: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool,
    dynamic: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      items: [],
      getArea: null,
      animated: false,
      dynamic: true
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  getInitialState: function getInitialState() {
    this._buttons = new Array(this.props.items.length);
    return {
      maxIcons: 9999,
      editorState: null,
      getArea: this.props.getArea,
      items: this.props.items,
      visible: false,
      // hide toolbar before first measure, otherwise icons overflow from container
      empty: !this.props.items || !this.props.items.length
    };
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    // eslint-disable-next-line react/prop-types
    if (this.props.controlled) {
      var newState = {};

      if (nextProps.getArea !== this.state.getArea && typeof nextProps.getArea === "function") {
        var area = nextProps.getArea();
        var nextEditorState = area.getEditorState();

        if (area && this.state.editorState !== nextEditorState) {
          newState.editorState = nextEditorState;
        }

        newState.getArea = nextProps.getArea;
      }

      if (nextProps.items.length > this.props.items.length) {
        var _buttons = new Array(nextProps.items.length);

        for (var i = 0; i < this._buttons.length; i++) {
          _buttons[i] = this._buttons[i];
        }

        this._buttons = _buttons;
      }

      if (nextProps.items && nextProps.items.length) {
        newState.items = nextProps.items;
        newState.empty = false; // indicates that toolbar will be animated
      } else {
        newState.empty = true;
      }

      this.setState(newState);
    }
  },
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  update: function update(editorState) {
    var _this = this;

    this.setState({
      editorState: editorState
    }, function () {
      for (var i = 0; i < _this._buttons.length; i++) {
        var button = _this._buttons[i]; // not each button should have API for opening and closing button

        if (button && typeof button.isOpen === "function" && button.isOpen()) {
          button.close();
        }
      }
    });
  },
  setItems: function setItems(editor, items) {
    var _this2 = this;

    this.setState(function (state) {
      var newState = {
        getArea: editor.getArea,
        items: items && items.length ? items : _this2.props.dynamic ? state.items : items,
        empty: !items || !items.length,
        editorState: editor.getArea().getEditorState()
      };
      return newState;
    });
  },
  //@@viewOff:interface
  //@@viewOn:overriding
  onResize_: function onResize_(oldWidth, newWidth) {
    var newMaxIcons = Math.max(Math.floor(newWidth / iconWidth), 0);
    var oldMaxIcons = this.state.maxIcons;

    if (newMaxIcons && newMaxIcons !== oldMaxIcons) {
      // it will always be lower after first render (if any icons are set) - this ensure set state visible to true
      if (oldMaxIcons !== newMaxIcons) {
        this.setState({
          maxIcons: newMaxIcons,
          visible: true
        });
      }
    }
  },
  //@@viewOff:overriding
  //@@viewOn:private
  _onButtonClick: function _onButtonClick(opt, callback) {
    if (typeof this.state.getArea !== "function") return;
    var area = this.state.getArea();
    if (!area) return;

    if (typeof opt.onClick === "function") {
      // process specific logic set by button
      var newEditorState = area.getEditorState();
      newEditorState = opt.onClick(newEditorState, area) || newEditorState; // update editor state

      area.setEditorState(newEditorState, callback);
    } else {
      // process standard change of editor state by inline styles, blocks or entities
      switch (opt.type) {
        case "inline":
          area.toggleInlineStyle(opt.value, opt.preserveStyle, opt.focus);
          break;

        case "block":
          area.toggleBlockType(opt.value);
          break;

        case "entity":
          // this method will set new editor state itself => stop next processing
          area.editSelectedComponent(opt.value, opt.component, opt.component, opt.onClick);
          break;
      }
    }
  },
  _isItemSelected: function _isItemSelected(editorState, item) {
    return !this.isDisabled() && (editorState ? typeof item.isSelected === "function" ? item.isSelected(editorState, item) : _bricks_style_js__WEBPACK_IMPORTED_MODULE_3__["default"].isSelected(editorState, item.type, item.value) : false);
  },
  _getItems: function _getItems() {
    var _this3 = this;

    var editorState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.editorState;
    var items = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.items;
    var parentItem = arguments.length > 2 ? arguments[2] : undefined;
    var newItems = [];
    items.forEach(function (item, index) {
      var result = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Tools.mergeDeep(item);
      result.props = result.props || {};

      if (parentItem) {
        result.value = parentItem.ignorePrefix ? result.value : "".concat(parentItem.value, ".").concat(result.value);
        result.type = result.type || parentItem.type;
      }

      result.disabled = _this3.isDisabled() || (editorState ? typeof item.isDisabled === "function" ? item.isDisabled(editorState) : false : true);
      result.selected = _this3._isItemSelected(editorState, result);

      if (typeof result.getProps === "function") {
        result.props = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Tools.merge(result.props, result.getProps(editorState, _this3.props.getArea, _this3));
      }

      result.label = _this3._getLsiItem(result.label);
      result.dropdownItemLabel = _this3._getLabelWithShortcut(result.dropdownItemLabel || result.label, result.shortcut);
      result.tooltip = _this3._getLabelWithShortcut(result.label, result.shortcut, true);

      if (result.props.items || result.items) {
        result.items = _this3._getItems(editorState, result.props.items || result.items, result);
        delete result.props.items;
      }

      if (!parentItem && index >= _this3.state.maxIcons) {
        if (index === _this3.state.maxIcons) {
          // pop last item in array and replace it by more item. Reset label of last item too.
          var lastItem = newItems.pop();
          newItems.push({
            value: "",
            icon: "mdi-dots-horizontal",
            items: [lastItem],
            props: {
              buttonProps: {
                pullRight: true
              }
            },
            disabled: _this3.isDisabled()
          });
        }

        newItems[_this3.state.maxIcons - 1].items.push(result);
      } else {
        newItems.push(result);
      }
    });
    return newItems;
  },
  _getLabelWithShortcut: function _getLabelWithShortcut(label, shortcut, plainText) {
    if (!shortcut) return this._getLsiItem(label); // let shortcut = !button.items && button.shortcut;

    var shortcutLabel;
    var shortcutChar = getCharFromKeyCode(shortcut.keyCode);
    var shortcutParts = [];

    if (shortcut.ctrlKey) {
      shortcutParts.push(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Tools.isMac() ? "Cmd" : "Ctrl");
    }

    if (shortcut.altKey) {
      shortcutParts.push("Alt");
    }

    if (shortcut.shiftKey) {
      shortcutParts.push("Shift");
    }

    if (shortcutChar) {
      shortcutParts.push(shortcutChar);
      shortcutLabel = "".concat(shortcutParts.join(" + "));
    }

    if (shortcutLabel) {
      // return shortcut in plaintext, for example for usage in tooltip
      if (plainText) {
        return "".concat(this._getLsiItem(label), " (").concat(shortcutLabel, ")");
      } // returns structured components for usage in dropdown items with display: flex;


      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create("span", {
        className: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].Css.css("flex-grow: 1; display: flex;")
      }, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create("span", {
        className: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].Css.css("flex-grow: 1;")
      }, this._getLsiItem(label)), uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create("span", {
        className: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].Css.css("flex: none; margin-left: 8px;")
      }, "(", shortcutLabel, ")"));
    } else {
      return this._getLsiItem(label);
    }
  },
  _getLsiItem: function _getLsiItem(lsi) {
    if (lsi && _typeof(lsi) === "object") {
      return this.getLsiItem(lsi);
    } else if (typeof lsi === "function") {
      return this.getLsiItem(lsi());
    } else {
      return lsi;
    }
  },
  _getLocalizedItems: function _getLocalizedItems(items) {
    if (!items || !Array.isArray(items)) {
      return items;
    }

    var result = [];

    for (var index = 0; index < items.length; index++) {
      var item = items[index];
      var resultItem = {};

      for (var propName in item) {
        if (propName === "label" || propName === "tooltip") {
          resultItem[propName] = this._getLsiItem(item[propName]);
          continue;
        }

        if (propName === "items") {
          resultItem[propName] = this._getLocalizedItems(item[propName]);
        }

        resultItem[propName] = item[propName];
      }

      result.push(resultItem);
    }

    return result;
  },
  _registerButton: function _registerButton(index, button) {
    this._buttons[index] = button;
  },
  _renderButtons: function _renderButtons() {
    var _this4 = this;

    return this._getItems().map(function (item, index) {
      var ButtonComponent = item.button || _toolbar_button_js__WEBPACK_IMPORTED_MODULE_2__["default"];

      var onClick = function onClick(opt) {
        opt.onClick = opt.onClick || item.onClick;

        _this4._onButtonClick(opt);
      };

      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(ButtonComponent // eslint-disable-next-line react/jsx-no-bind
      , _extends({
        ref_: function ref_(button) {
          return _this4._registerButton(index, button);
        },
        key: index,
        className: "uu5-richtext-toolbar-button",
        icon: item.icon,
        onClick: onClick,
        type: item.type || "custom",
        value: item.value,
        getArea: _this4.state.getArea,
        disabled: item.disabled,
        pressed: item.selected,
        label: _this4._getLsiItem(item.label),
        items: _this4._getLocalizedItems(item.items),
        colorSchema: "custom",
        tooltip: _this4._getLsiItem(item.tooltip || item.label),
        preserveStyle: item.preserveStyle
      }, item.props, {
        baseline: true
      }));
    });
  },
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    // if (!this.state.items || !this.state.items.length) return null;
    var mainProps = this.getMainPropsToPass();
    mainProps.disabled = false;

    if (!this.state.visible) {
      mainProps.className += " ".concat(this.getClassName("invisible"));
    }

    return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Div, mainProps, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create("div", {
      className: this.getClassName("background")
    }, this.state.items && this.state.items.length ? this._renderButtons() : null));
  } //@@viewOff:render

}));
/* harmony default export */ __webpack_exports__["default"] = (Toolbar);

/***/ }),

/***/ 292:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(40);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

//@@viewOn: revision
// coded: Martin Mach, 06.01.2021
// reviewed: Filip Janovský: 12.01.2021
//@@viewOff:revision


var ToolbarButton = uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].VisualComponent.create({
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].BaseMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].ElementaryMixin, uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].ColorSchemaMixin],
  //@@viewOff:mixins
  //@@viewOn:statics
  statics: {
    tagName: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].TAG + "Toolbar.Button",
    classNames: {
      main: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].CSS + "toolbar-button",
      dropdownItemIcon: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].CSS + "toolbar-dropdown-item-icon",
      dropdownItemLabel: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].CSS + "toolbar-dropdown-item-label" + " " + _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].CSS + "toolbar-dropdown-item-icon",
      dropdownButton: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].CSS + "toolbar-dropdown-button",
      dropdownMenu: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].CSS + "toolbar-dropdown-menu",
      itemWithButton: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].CSS + "item-with-button"
    }
  },
  //@@viewOff:statics
  //@@viewOn:propTypes
  propTypes: {
    onClick: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func,
    type: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string.isRequired,
    value: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string.isRequired,
    pressed: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool,
    items: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].array,
    label: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
    icon: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].string,
    getArea: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].func,
    baseline: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool,
    buttonProps: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].object,
    preserveStyle: uu5g04__WEBPACK_IMPORTED_MODULE_0__["PropTypes"].bool
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      onClick: null,
      type: "",
      value: "",
      pressed: false,
      items: null,
      label: undefined,
      icon: undefined,
      getArea: null,
      baseline: false,
      buttonProps: undefined,
      preserveStyle: false
    };
  },
  //@@viewOff:getDefaultProps
  //@@viewOn:reactLifeCycle
  componentWillUnmount: function componentWillUnmount() {
    /* eslint-disable react/prop-types */
    // prop ref_ is defined in base-mixin
    if (typeof this.props.ref_ === "function") {
      this.props.ref_(null);
    }
    /* eslint-enable */

  },
  //@@viewOff:reactLifeCycle
  //@@viewOn:interface
  press: function press() {
    if (this._button) {
      this._button.press();
    }
  },
  pressUp: function pressUp() {
    if (this._button) {
      this._button.pressUp();
    }
  },
  isPressed: function isPressed() {
    return this._button ? this._button.isPressed() : this.props.pressed;
  },
  isDropdown: function isDropdown() {
    return this._dropdown && this._dropdown.isDropdown();
  },
  isOpen: function isOpen() {
    return this.isDropdown() && this._dropdown.isOpen();
  },
  open: function open() {
    return this._dropdown ? this._dropdown.open() : null;
  },
  close: function close() {
    return this._dropdown ? this._dropdown.close() : null;
  },
  //@@viewOff:interface
  //@@viewOn:overriding
  //@@viewOff:overriding
  //@@viewOn:private
  _onClick: function _onClick(e) {
    if (this._blockEditorBlur(this.props.type)) this._blockEvent(e);

    if (typeof this.props.onClick === "function") {
      this.props.onClick({
        component: this,
        type: this.props.type,
        value: this.props.value,
        preserveStyle: this.props.preserveStyle
      });
    }
  },
  _onItemClick: function _onItemClick(e, item) {
    var opt = {
      component: this,
      type: item.type || this.props.type,
      value: item.value,
      preserveStyle: this.props.preserveStyle
    };

    if (typeof item.onClick === "function") {
      opt.onClick = item.onClick;
    }

    if (typeof this.props.onClick === "function") {
      this.props.onClick(opt);
    }
  },
  _blockEvent: function _blockEvent(e) {
    e.preventDefault();
    e.stopPropagation();
  },
  _blockUU5Click: function _blockUU5Click(button, e) {
    this._blockEvent(e);
  },
  _blockEditorBlur: function _blockEditorBlur(type) {
    return true;
  },
  _registerButton: function _registerButton(button) {
    this._button = button;
  },
  _registerDropdown: function _registerDropdown(dropdown) {
    this._dropdown = dropdown;
  },
  _getItemClickFn: function _getItemClickFn(item) {
    var _this = this;

    return function (e) {
      return _this._onItemClick(e, item);
    };
  },
  _renderDropDownItems: function _renderDropDownItems() {
    var _this2 = this;

    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.items;
    var useIcon = items.some(function (item) {
      return item.icon;
    });
    return items.map(function (item) {
      var props = item.props;

      if (item.props) {
        item = _objectSpread(_objectSpread({}, item), props);
      }

      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Dropdown.Item, {
        key: item.label,
        className: (item.className || "") + (item.button ? _this2.getClassName("itemWithButton") : ""),
        label: item.button ? uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(item.button, _extends({
          className: _this2.getClassName("dropdownButton"),
          label: item.dropdownItemLabel || item.label,
          icon: item.icon,
          onClick: _this2.props.onClick,
          selected: item.selected,
          disabled: item.disabled,
          dropdownItem: true,
          getArea: _this2.props.getArea,
          colorSchema: _this2.props.colorSchema // eslint-disable-line react/prop-types
          ,
          preserveStyle: _this2.props.preserveStyle
        }, props)) : uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create("span", {
          className: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].Css.css("display: flex; align-items: center;")
        }, useIcon && (item.icon ? uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Icon, {
          className: _this2.getClassName("dropdownItemIcon"),
          icon: item.icon || "mdi-blank"
        }) : item.dropdownItemLabel ? uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create("span", {
          className: _this2.getClassName("dropdownItemLabel")
        }, item.label) : uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Icon, {
          className: _this2.getClassName("dropdownItemIcon"),
          icon: "mdi-blank"
        })), item.dropdownItemLabel || item.label),
        tooltip: item.tooltip,
        mainAttrs: _this2._blockEditorBlur(item.type) ? {
          onMouseDown: _this2._blockEvent
        } : undefined,
        selected: item.selected,
        onClick: item.button || item.items ? _this2._blockUU5Click : _this2._getItemClickFn(item)
      }, item.items ? _this2._renderDropDownItems(item.items) : undefined);
    });
  },
  //@@viewOff:private
  //@@viewOn:render
  render: function render() {
    var mainProps = this.getMainPropsToPass();

    if (Array.isArray(this.props.items) && this.props.items.length > 0) {
      var iconLabel = this.props.icon && "<uu5string /><UU5.Bricks.Icon icon=\"".concat(this.props.icon, "\" />");
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Dropdown, _extends({}, mainProps, this.props.buttonProps, {
        ref_: this._registerDropdown,
        label: iconLabel || this.props.label,
        iconHidden: true,
        buttonProps: {
          mainAttrs: {
            onMouseDown: this._blockEvent,
            tabIndex: -1
          }
        },
        baseline: this.props.baseline,
        colorSchema: this.props.colorSchema // eslint-disable-line react/prop-types
        ,
        popoverLocation: "portal",
        menuClassName: this.getClassName("dropdownMenu")
      }), this._renderDropDownItems());
    } else {
      return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Button, _extends({
        ref_: this._registerButton
      }, mainProps, {
        pressed: this.props.pressed,
        mainAttrs: {
          onMouseDown: this._onClick,
          tabIndex: -1
        },
        onClick: this._blockUU5Click,
        baseline: this.props.baseline,
        colorSchema: this.props.colorSchema // eslint-disable-line react/prop-types

      }, this.props.buttonProps), this.props.icon ? uu5g04__WEBPACK_IMPORTED_MODULE_0__["Common"].Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_0__["Bricks"].Icon, {
        icon: this.props.icon
      }) : this.props.label);
    }
  } //@@viewOff:render

});
/* harmony default export */ __webpack_exports__["default"] = (ToolbarButton);

/***/ }),

/***/ 293:
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(294);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":false}

options.transform = transform
options.insertInto = function anonymous(
) {
return __webpack_require__(16)();
};

var update = __webpack_require__(17)(content, options);

if(content.locals) module.exports = content.locals;



/***/ }),

/***/ 294:
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(15);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".uu5-richtext-toolbar {\n  text-align: left;\n  border-radius: 2px;\n  white-space: nowrap;\n  font-family: ClearSans, sans-serif;\n  font-size: 14px;\n  position: relative;\n}\n.uu5-richtext-toolbar-button.uu5-richtext-toolbar-button.uu5-bricks-button,\n.uu5-richtext-toolbar-button.uu5-richtext-toolbar-button.uu5-bricks-dropdown .uu5-richtext-toolbar-button,\n.uu5-richtext-toolbar-button.uu5-richtext-toolbar-button.uu5-bricks-dropdown > div > .uu5-bricks-button {\n  border-radius: 0;\n  height: 32px;\n  width: 32px;\n}\n.uu5-richtext-toolbar-button.uu5-richtext-toolbar-button.uu5-bricks-button:not(.active):not(:hover),\n.uu5-richtext-toolbar-button.uu5-richtext-toolbar-button.uu5-bricks-dropdown .uu5-richtext-toolbar-button:not(.active):not(:hover),\n.uu5-richtext-toolbar-button.uu5-richtext-toolbar-button.uu5-bricks-dropdown > div > .uu5-bricks-button:not(.active):not(:hover) {\n  background: transparent;\n}\n.uu5-richtext-toolbar-button.uu5-richtext-toolbar-button .uu5-richtext-toolbar-dropdown-button {\n  background: transparent;\n  width: 100%;\n  height: 100%;\n  display: inline-block;\n  text-align: left;\n  min-height: auto;\n}\n.uu5-richtext-toolbar-button.uu5-richtext-toolbar-button.uu5-bricks-button,\n.uu5-richtext-toolbar-button.uu5-richtext-toolbar-button.uu5-bricks-dropdown > div > button {\n  padding: 0 4px;\n}\n.uu5-richtext-toolbar-dropdown-menu .uu5-bricks-dropdown-item:not(.uu5-richtext-item-with-button) > .uu5-bricks-dropdown-item-link {\n  display: -webkit-flex;\n  display: flex;\n}\n.uu5-richtext-toolbar-dropdown-menu .uu5-bricks-dropdown-item-submenu .uu5-bricks-dropdown-item-link {\n  -webkit-justify-content: flex-start;\n          justify-content: flex-start;\n}\n.uu5-richtext-toolbar-dropdown-menu .uu5-bricks-dropdown-item-submenu .uu5-bricks-dropdown-item-link > .mdi-menu-right {\n  -webkit-flex: 1 1 auto;\n          flex: 1 1 auto;\n  -webkit-justify-content: flex-end;\n          justify-content: flex-end;\n}\n.uu5-richtext-toolbar-dropdown-menu .uu5-bricks-dropdown-item-submenu .uu5-bricks-dropdown-submenu.uu5-bricks-dropdown-menu.uu5-bricks-dropdown-menu {\n  left: 0;\n  width: 100%;\n  top: 100%;\n}\n.uu5-richtext-toolbar-dropdown-menu .uu5-richtext-toolbar-dropdown-item-icon {\n  margin: 0 8px 0 -8px;\n}\n.uu5-richtext-toolbar-dropdown-menu .uu5-richtext-toolbar-dropdown-item-icon::before {\n  font-size: 20px;\n}\n.uu5-richtext-toolbar-dropdown-menu .uu5-richtext-toolbar-dropdown-button {\n  background: transparent;\n  width: 100%;\n  height: 100%;\n  display: inline-block;\n  text-align: left;\n  min-height: auto;\n}\n.uu5-richtext-item-with-button.uu5-richtext-item-with-button > .uu5-bricks-dropdown-item-link,\n.uu5-bricks-compact-menu-item.uu5-richtext-item-with-button.uu5-richtext-item-with-button {\n  padding: 0;\n}\n@-webkit-keyframes uu5-richtext-toolbar-show {\n  0% {\n    overflow: hidden;\n  }\n  100% {\n    overflow: hidden;\n  }\n}\n@keyframes uu5-richtext-toolbar-show {\n  0% {\n    overflow: hidden;\n  }\n  100% {\n    overflow: hidden;\n  }\n}\n", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ 300:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _editor_input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(301);


var EditorInputWrapper = function EditorInputWrapper(props) {
  return UU5.Common.Element.create(_editor_input_js__WEBPACK_IMPORTED_MODULE_0__["default"], props);
};

/* harmony default export */ __webpack_exports__["default"] = (EditorInputWrapper);

/***/ }),

/***/ 301:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditorInput", function() { return EditorInput; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(38);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_forms__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(40);
/* harmony import */ var _editor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(290);
/* harmony import */ var _internal_create_input_component_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(302);





var EditorInput = Object(_internal_create_input_component_js__WEBPACK_IMPORTED_MODULE_4__["default"])({
  Component: _editor_js__WEBPACK_IMPORTED_MODULE_3__["default"],
  lsi: function lsi() {
    return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].Lsi.RichText.editorInput;
  },
  tagName: _config_js__WEBPACK_IMPORTED_MODULE_2__["default"].TAG + "EditorInput",
  mainClassName: _config_js__WEBPACK_IMPORTED_MODULE_2__["default"].CSS + "editor-input"
});
/* harmony default export */ __webpack_exports__["default"] = (EditorInput);

/***/ }),

/***/ 303:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _expandable_editor_input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(304);


var ExpandableEditorInputWrapper = function ExpandableEditorInputWrapper(props) {
  return UU5.Common.Element.create(_expandable_editor_input_js__WEBPACK_IMPORTED_MODULE_0__["default"], props);
};

/* harmony default export */ __webpack_exports__["default"] = (ExpandableEditorInputWrapper);

/***/ }),

/***/ 304:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpandableEditorInput", function() { return ExpandableEditorInput; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(38);
/* harmony import */ var uu5g04_forms__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_forms__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(40);
/* harmony import */ var _expandable_editor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(282);
/* harmony import */ var _internal_create_input_component_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(302);





var ExpandableEditorInput = Object(_internal_create_input_component_js__WEBPACK_IMPORTED_MODULE_4__["default"])({
  Component: _expandable_editor_js__WEBPACK_IMPORTED_MODULE_3__["default"],
  lsi: function lsi() {
    return uu5g04__WEBPACK_IMPORTED_MODULE_0__["Environment"].Lsi.RichText.editorInput;
  },
  tagName: _config_js__WEBPACK_IMPORTED_MODULE_2__["default"].TAG + "ExpandableEditorInput",
  mainClassName: _config_js__WEBPACK_IMPORTED_MODULE_2__["default"].CSS + "expandable-editor-input"
});
/* harmony default export */ __webpack_exports__["default"] = (ExpandableEditorInput);

/***/ })

}]);